package com.tencent.aimedia;

import com.tencent.trpc.core.rpc.RpcContext;
import com.tencent.trpc.core.rpc.anno.TRpcMethod;
import com.tencent.trpc.core.rpc.anno.TRpcService;
import java.util.concurrent.CompletionStage;

import com.tencent.aimedia.SnapshotProtocol.CreateSnapshotRequest;
import com.tencent.aimedia.SnapshotProtocol.CreateSnapshotResponse;
import com.tencent.aimedia.SnapshotProtocol.DescribeSnapshotRequest;
import com.tencent.aimedia.SnapshotProtocol.DescribeSnapshotResponse;
import com.tencent.aimedia.SnapshotProtocol.UpdateSnapshotRequest;
import com.tencent.aimedia.SnapshotProtocol.UpdateSnapshotResponse;

/**
 * Generated by trpc-java-codegen
 */
@TRpcService(name = "trpc.media.snapshot.Snapshot")
public interface SnapshotAsyncAPI {

    /**
     * CreateSnapshot
     *
     * @param context context
     * @param request request
     * @return {@link CompletionStage} of {@link CreateSnapshotResponse}
     */
    @TRpcMethod(name = "CreateSnapshot")
    CompletionStage<CreateSnapshotResponse> createSnapshot(RpcContext context, CreateSnapshotRequest request);

    /**
     * DescribeSnapshotData
     *
     * @param context context
     * @param request request
     * @return {@link CompletionStage} of {@link DescribeSnapshotResponse}
     */
    @TRpcMethod(name = "DescribeSnapshotData")
    CompletionStage<DescribeSnapshotResponse> describeSnapshotData(RpcContext context, DescribeSnapshotRequest request);

    /**
     * UpdateSnapshot
     *
     * @param context context
     * @param request request
     * @return {@link CompletionStage} of {@link UpdateSnapshotResponse}
     */
    @TRpcMethod(name = "UpdateSnapshot")
    CompletionStage<UpdateSnapshotResponse> updateSnapshot(RpcContext context, UpdateSnapshotRequest request);
}