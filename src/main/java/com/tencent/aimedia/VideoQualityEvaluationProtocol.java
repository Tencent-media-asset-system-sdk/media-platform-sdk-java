// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: video_quality_evaluation.proto

package com.tencent.aimedia;

public final class VideoQualityEvaluationProtocol {
  private VideoQualityEvaluationProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CreateVideoQualityEvaluationTaskRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.CreateVideoQualityEvaluationTaskRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string MediaId = 1;</code>
     * @return The mediaId.
     */
    java.lang.String getMediaId();
    /**
     * <code>string MediaId = 1;</code>
     * @return The bytes for mediaId.
     */
    com.google.protobuf.ByteString
        getMediaIdBytes();

    /**
     * <code>string TaskName = 4;</code>
     * @return The taskName.
     */
    java.lang.String getTaskName();
    /**
     * <code>string TaskName = 4;</code>
     * @return The bytes for taskName.
     */
    com.google.protobuf.ByteString
        getTaskNameBytes();

    /**
     * <code>string CallbackURL = 5;</code>
     * @return The callbackURL.
     */
    java.lang.String getCallbackURL();
    /**
     * <code>string CallbackURL = 5;</code>
     * @return The bytes for callbackURL.
     */
    com.google.protobuf.ByteString
        getCallbackURLBytes();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.CreateVideoQualityEvaluationTaskRequest}
   */
  public static final class CreateVideoQualityEvaluationTaskRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.CreateVideoQualityEvaluationTaskRequest)
      CreateVideoQualityEvaluationTaskRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateVideoQualityEvaluationTaskRequest.newBuilder() to construct.
    private CreateVideoQualityEvaluationTaskRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateVideoQualityEvaluationTaskRequest() {
      mediaId_ = "";
      taskName_ = "";
      callbackURL_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateVideoQualityEvaluationTaskRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest.Builder.class);
    }

    public static final int MEDIAID_FIELD_NUMBER = 1;
    private volatile java.lang.Object mediaId_;
    /**
     * <code>string MediaId = 1;</code>
     * @return The mediaId.
     */
    @java.lang.Override
    public java.lang.String getMediaId() {
      java.lang.Object ref = mediaId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mediaId_ = s;
        return s;
      }
    }
    /**
     * <code>string MediaId = 1;</code>
     * @return The bytes for mediaId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMediaIdBytes() {
      java.lang.Object ref = mediaId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mediaId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TASKNAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object taskName_;
    /**
     * <code>string TaskName = 4;</code>
     * @return The taskName.
     */
    @java.lang.Override
    public java.lang.String getTaskName() {
      java.lang.Object ref = taskName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskName_ = s;
        return s;
      }
    }
    /**
     * <code>string TaskName = 4;</code>
     * @return The bytes for taskName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTaskNameBytes() {
      java.lang.Object ref = taskName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CALLBACKURL_FIELD_NUMBER = 5;
    private volatile java.lang.Object callbackURL_;
    /**
     * <code>string CallbackURL = 5;</code>
     * @return The callbackURL.
     */
    @java.lang.Override
    public java.lang.String getCallbackURL() {
      java.lang.Object ref = callbackURL_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        callbackURL_ = s;
        return s;
      }
    }
    /**
     * <code>string CallbackURL = 5;</code>
     * @return The bytes for callbackURL.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCallbackURLBytes() {
      java.lang.Object ref = callbackURL_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callbackURL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(mediaId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mediaId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, taskName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callbackURL_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, callbackURL_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(mediaId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mediaId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, taskName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callbackURL_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, callbackURL_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest) obj;

      if (!getMediaId()
          .equals(other.getMediaId())) return false;
      if (!getTaskName()
          .equals(other.getTaskName())) return false;
      if (!getCallbackURL()
          .equals(other.getCallbackURL())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MEDIAID_FIELD_NUMBER;
      hash = (53 * hash) + getMediaId().hashCode();
      hash = (37 * hash) + TASKNAME_FIELD_NUMBER;
      hash = (53 * hash) + getTaskName().hashCode();
      hash = (37 * hash) + CALLBACKURL_FIELD_NUMBER;
      hash = (53 * hash) + getCallbackURL().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.CreateVideoQualityEvaluationTaskRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.CreateVideoQualityEvaluationTaskRequest)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mediaId_ = "";

        taskName_ = "";

        callbackURL_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest(this);
        result.mediaId_ = mediaId_;
        result.taskName_ = taskName_;
        result.callbackURL_ = callbackURL_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest.getDefaultInstance()) return this;
        if (!other.getMediaId().isEmpty()) {
          mediaId_ = other.mediaId_;
          onChanged();
        }
        if (!other.getTaskName().isEmpty()) {
          taskName_ = other.taskName_;
          onChanged();
        }
        if (!other.getCallbackURL().isEmpty()) {
          callbackURL_ = other.callbackURL_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                mediaId_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 34: {
                taskName_ = input.readStringRequireUtf8();

                break;
              } // case 34
              case 42: {
                callbackURL_ = input.readStringRequireUtf8();

                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object mediaId_ = "";
      /**
       * <code>string MediaId = 1;</code>
       * @return The mediaId.
       */
      public java.lang.String getMediaId() {
        java.lang.Object ref = mediaId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mediaId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string MediaId = 1;</code>
       * @return The bytes for mediaId.
       */
      public com.google.protobuf.ByteString
          getMediaIdBytes() {
        java.lang.Object ref = mediaId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mediaId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string MediaId = 1;</code>
       * @param value The mediaId to set.
       * @return This builder for chaining.
       */
      public Builder setMediaId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mediaId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string MediaId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMediaId() {
        
        mediaId_ = getDefaultInstance().getMediaId();
        onChanged();
        return this;
      }
      /**
       * <code>string MediaId = 1;</code>
       * @param value The bytes for mediaId to set.
       * @return This builder for chaining.
       */
      public Builder setMediaIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mediaId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object taskName_ = "";
      /**
       * <code>string TaskName = 4;</code>
       * @return The taskName.
       */
      public java.lang.String getTaskName() {
        java.lang.Object ref = taskName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          taskName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string TaskName = 4;</code>
       * @return The bytes for taskName.
       */
      public com.google.protobuf.ByteString
          getTaskNameBytes() {
        java.lang.Object ref = taskName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string TaskName = 4;</code>
       * @param value The taskName to set.
       * @return This builder for chaining.
       */
      public Builder setTaskName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string TaskName = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTaskName() {
        
        taskName_ = getDefaultInstance().getTaskName();
        onChanged();
        return this;
      }
      /**
       * <code>string TaskName = 4;</code>
       * @param value The bytes for taskName to set.
       * @return This builder for chaining.
       */
      public Builder setTaskNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object callbackURL_ = "";
      /**
       * <code>string CallbackURL = 5;</code>
       * @return The callbackURL.
       */
      public java.lang.String getCallbackURL() {
        java.lang.Object ref = callbackURL_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          callbackURL_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string CallbackURL = 5;</code>
       * @return The bytes for callbackURL.
       */
      public com.google.protobuf.ByteString
          getCallbackURLBytes() {
        java.lang.Object ref = callbackURL_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callbackURL_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string CallbackURL = 5;</code>
       * @param value The callbackURL to set.
       * @return This builder for chaining.
       */
      public Builder setCallbackURL(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        callbackURL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string CallbackURL = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallbackURL() {
        
        callbackURL_ = getDefaultInstance().getCallbackURL();
        onChanged();
        return this;
      }
      /**
       * <code>string CallbackURL = 5;</code>
       * @param value The bytes for callbackURL to set.
       * @return This builder for chaining.
       */
      public Builder setCallbackURLBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        callbackURL_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.CreateVideoQualityEvaluationTaskRequest)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.CreateVideoQualityEvaluationTaskRequest)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateVideoQualityEvaluationTaskRequest>
        PARSER = new com.google.protobuf.AbstractParser<CreateVideoQualityEvaluationTaskRequest>() {
      @java.lang.Override
      public CreateVideoQualityEvaluationTaskRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CreateVideoQualityEvaluationTaskRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateVideoQualityEvaluationTaskRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreateVideoQualityEvaluationTaskResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.CreateVideoQualityEvaluationTaskResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string TaskId = 1;</code>
     * @return The taskId.
     */
    java.lang.String getTaskId();
    /**
     * <code>string TaskId = 1;</code>
     * @return The bytes for taskId.
     */
    com.google.protobuf.ByteString
        getTaskIdBytes();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.CreateVideoQualityEvaluationTaskResponse}
   */
  public static final class CreateVideoQualityEvaluationTaskResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.CreateVideoQualityEvaluationTaskResponse)
      CreateVideoQualityEvaluationTaskResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateVideoQualityEvaluationTaskResponse.newBuilder() to construct.
    private CreateVideoQualityEvaluationTaskResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateVideoQualityEvaluationTaskResponse() {
      taskId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateVideoQualityEvaluationTaskResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse.Builder.class);
    }

    public static final int TASKID_FIELD_NUMBER = 1;
    private volatile java.lang.Object taskId_;
    /**
     * <code>string TaskId = 1;</code>
     * @return The taskId.
     */
    @java.lang.Override
    public java.lang.String getTaskId() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskId_ = s;
        return s;
      }
    }
    /**
     * <code>string TaskId = 1;</code>
     * @return The bytes for taskId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTaskIdBytes() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, taskId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, taskId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse) obj;

      if (!getTaskId()
          .equals(other.getTaskId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TASKID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.CreateVideoQualityEvaluationTaskResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.CreateVideoQualityEvaluationTaskResponse)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        taskId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse(this);
        result.taskId_ = taskId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse.getDefaultInstance()) return this;
        if (!other.getTaskId().isEmpty()) {
          taskId_ = other.taskId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                taskId_ = input.readStringRequireUtf8();

                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object taskId_ = "";
      /**
       * <code>string TaskId = 1;</code>
       * @return The taskId.
       */
      public java.lang.String getTaskId() {
        java.lang.Object ref = taskId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          taskId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string TaskId = 1;</code>
       * @return The bytes for taskId.
       */
      public com.google.protobuf.ByteString
          getTaskIdBytes() {
        java.lang.Object ref = taskId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string TaskId = 1;</code>
       * @param value The taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string TaskId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTaskId() {
        
        taskId_ = getDefaultInstance().getTaskId();
        onChanged();
        return this;
      }
      /**
       * <code>string TaskId = 1;</code>
       * @param value The bytes for taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.CreateVideoQualityEvaluationTaskResponse)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.CreateVideoQualityEvaluationTaskResponse)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateVideoQualityEvaluationTaskResponse>
        PARSER = new com.google.protobuf.AbstractParser<CreateVideoQualityEvaluationTaskResponse>() {
      @java.lang.Override
      public CreateVideoQualityEvaluationTaskResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CreateVideoQualityEvaluationTaskResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateVideoQualityEvaluationTaskResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.CreateVideoQualityEvaluationTaskResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VideoDefectLimitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.VideoDefectLimit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    int getDefectTypeValue();
    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType getDefectType();

    /**
     * <code>uint32 LowerDurationLimit = 2;</code>
     * @return The lowerDurationLimit.
     */
    int getLowerDurationLimit();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.VideoDefectLimit}
   */
  public static final class VideoDefectLimit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.VideoDefectLimit)
      VideoDefectLimitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VideoDefectLimit.newBuilder() to construct.
    private VideoDefectLimit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VideoDefectLimit() {
      defectType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VideoDefectLimit();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectLimit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectLimit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder.class);
    }

    public static final int DEFECTTYPE_FIELD_NUMBER = 1;
    private int defectType_;
    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    @java.lang.Override public int getDefectTypeValue() {
      return defectType_;
    }
    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    @java.lang.Override public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType getDefectType() {
      @SuppressWarnings("deprecation")
      com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.valueOf(defectType_);
      return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.UNRECOGNIZED : result;
    }

    public static final int LOWERDURATIONLIMIT_FIELD_NUMBER = 2;
    private int lowerDurationLimit_;
    /**
     * <code>uint32 LowerDurationLimit = 2;</code>
     * @return The lowerDurationLimit.
     */
    @java.lang.Override
    public int getLowerDurationLimit() {
      return lowerDurationLimit_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.kUnknown.getNumber()) {
        output.writeEnum(1, defectType_);
      }
      if (lowerDurationLimit_ != 0) {
        output.writeUInt32(2, lowerDurationLimit_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.kUnknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, defectType_);
      }
      if (lowerDurationLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lowerDurationLimit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit) obj;

      if (defectType_ != other.defectType_) return false;
      if (getLowerDurationLimit()
          != other.getLowerDurationLimit()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEFECTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + defectType_;
      hash = (37 * hash) + LOWERDURATIONLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getLowerDurationLimit();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.VideoDefectLimit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.VideoDefectLimit)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectLimit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectLimit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        defectType_ = 0;

        lowerDurationLimit_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectLimit_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit(this);
        result.defectType_ = defectType_;
        result.lowerDurationLimit_ = lowerDurationLimit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.getDefaultInstance()) return this;
        if (other.defectType_ != 0) {
          setDefectTypeValue(other.getDefectTypeValue());
        }
        if (other.getLowerDurationLimit() != 0) {
          setLowerDurationLimit(other.getLowerDurationLimit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                defectType_ = input.readEnum();

                break;
              } // case 8
              case 16: {
                lowerDurationLimit_ = input.readUInt32();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int defectType_ = 0;
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @return The enum numeric value on the wire for defectType.
       */
      @java.lang.Override public int getDefectTypeValue() {
        return defectType_;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @param value The enum numeric value on the wire for defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectTypeValue(int value) {
        
        defectType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @return The defectType.
       */
      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType getDefectType() {
        @SuppressWarnings("deprecation")
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.valueOf(defectType_);
        return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.UNRECOGNIZED : result;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @param value The defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectType(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        defectType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefectType() {
        
        defectType_ = 0;
        onChanged();
        return this;
      }

      private int lowerDurationLimit_ ;
      /**
       * <code>uint32 LowerDurationLimit = 2;</code>
       * @return The lowerDurationLimit.
       */
      @java.lang.Override
      public int getLowerDurationLimit() {
        return lowerDurationLimit_;
      }
      /**
       * <code>uint32 LowerDurationLimit = 2;</code>
       * @param value The lowerDurationLimit to set.
       * @return This builder for chaining.
       */
      public Builder setLowerDurationLimit(int value) {
        
        lowerDurationLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 LowerDurationLimit = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLowerDurationLimit() {
        
        lowerDurationLimit_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.VideoDefectLimit)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.VideoDefectLimit)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VideoDefectLimit>
        PARSER = new com.google.protobuf.AbstractParser<VideoDefectLimit>() {
      @java.lang.Override
      public VideoDefectLimit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<VideoDefectLimit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VideoDefectLimit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioDefectLimitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.AudioDefectLimit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    int getDefectTypeValue();
    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType getDefectType();

    /**
     * <code>uint32 LowerDurationLimit = 2;</code>
     * @return The lowerDurationLimit.
     */
    int getLowerDurationLimit();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.AudioDefectLimit}
   */
  public static final class AudioDefectLimit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.AudioDefectLimit)
      AudioDefectLimitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioDefectLimit.newBuilder() to construct.
    private AudioDefectLimit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioDefectLimit() {
      defectType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioDefectLimit();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectLimit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectLimit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder.class);
    }

    public static final int DEFECTTYPE_FIELD_NUMBER = 1;
    private int defectType_;
    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    @java.lang.Override public int getDefectTypeValue() {
      return defectType_;
    }
    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    @java.lang.Override public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType getDefectType() {
      @SuppressWarnings("deprecation")
      com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.valueOf(defectType_);
      return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.UNRECOGNIZED : result;
    }

    public static final int LOWERDURATIONLIMIT_FIELD_NUMBER = 2;
    private int lowerDurationLimit_;
    /**
     * <code>uint32 LowerDurationLimit = 2;</code>
     * @return The lowerDurationLimit.
     */
    @java.lang.Override
    public int getLowerDurationLimit() {
      return lowerDurationLimit_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.kUnknown.getNumber()) {
        output.writeEnum(1, defectType_);
      }
      if (lowerDurationLimit_ != 0) {
        output.writeUInt32(2, lowerDurationLimit_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.kUnknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, defectType_);
      }
      if (lowerDurationLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lowerDurationLimit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit) obj;

      if (defectType_ != other.defectType_) return false;
      if (getLowerDurationLimit()
          != other.getLowerDurationLimit()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEFECTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + defectType_;
      hash = (37 * hash) + LOWERDURATIONLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getLowerDurationLimit();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.AudioDefectLimit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.AudioDefectLimit)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectLimit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectLimit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        defectType_ = 0;

        lowerDurationLimit_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectLimit_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit(this);
        result.defectType_ = defectType_;
        result.lowerDurationLimit_ = lowerDurationLimit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.getDefaultInstance()) return this;
        if (other.defectType_ != 0) {
          setDefectTypeValue(other.getDefectTypeValue());
        }
        if (other.getLowerDurationLimit() != 0) {
          setLowerDurationLimit(other.getLowerDurationLimit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                defectType_ = input.readEnum();

                break;
              } // case 8
              case 16: {
                lowerDurationLimit_ = input.readUInt32();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int defectType_ = 0;
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @return The enum numeric value on the wire for defectType.
       */
      @java.lang.Override public int getDefectTypeValue() {
        return defectType_;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @param value The enum numeric value on the wire for defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectTypeValue(int value) {
        
        defectType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @return The defectType.
       */
      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType getDefectType() {
        @SuppressWarnings("deprecation")
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.valueOf(defectType_);
        return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.UNRECOGNIZED : result;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @param value The defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectType(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        defectType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefectType() {
        
        defectType_ = 0;
        onChanged();
        return this;
      }

      private int lowerDurationLimit_ ;
      /**
       * <code>uint32 LowerDurationLimit = 2;</code>
       * @return The lowerDurationLimit.
       */
      @java.lang.Override
      public int getLowerDurationLimit() {
        return lowerDurationLimit_;
      }
      /**
       * <code>uint32 LowerDurationLimit = 2;</code>
       * @param value The lowerDurationLimit to set.
       * @return This builder for chaining.
       */
      public Builder setLowerDurationLimit(int value) {
        
        lowerDurationLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 LowerDurationLimit = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLowerDurationLimit() {
        
        lowerDurationLimit_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.AudioDefectLimit)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.AudioDefectLimit)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioDefectLimit>
        PARSER = new com.google.protobuf.AbstractParser<AudioDefectLimit>() {
      @java.lang.Override
      public AudioDefectLimit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AudioDefectLimit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioDefectLimit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescribeVideoQualityLimitListRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.DescribeVideoQualityLimitListRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string RequestId = 1;</code>
     * @return The requestId.
     */
    java.lang.String getRequestId();
    /**
     * <code>string RequestId = 1;</code>
     * @return The bytes for requestId.
     */
    com.google.protobuf.ByteString
        getRequestIdBytes();

    /**
     * <code>uint32 ProjectId = 2;</code>
     * @return The projectId.
     */
    int getProjectId();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityLimitListRequest}
   */
  public static final class DescribeVideoQualityLimitListRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.DescribeVideoQualityLimitListRequest)
      DescribeVideoQualityLimitListRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DescribeVideoQualityLimitListRequest.newBuilder() to construct.
    private DescribeVideoQualityLimitListRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DescribeVideoQualityLimitListRequest() {
      requestId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DescribeVideoQualityLimitListRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest.Builder.class);
    }

    public static final int REQUESTID_FIELD_NUMBER = 1;
    private volatile java.lang.Object requestId_;
    /**
     * <code>string RequestId = 1;</code>
     * @return The requestId.
     */
    @java.lang.Override
    public java.lang.String getRequestId() {
      java.lang.Object ref = requestId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        requestId_ = s;
        return s;
      }
    }
    /**
     * <code>string RequestId = 1;</code>
     * @return The bytes for requestId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRequestIdBytes() {
      java.lang.Object ref = requestId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requestId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROJECTID_FIELD_NUMBER = 2;
    private int projectId_;
    /**
     * <code>uint32 ProjectId = 2;</code>
     * @return The projectId.
     */
    @java.lang.Override
    public int getProjectId() {
      return projectId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(requestId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, requestId_);
      }
      if (projectId_ != 0) {
        output.writeUInt32(2, projectId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(requestId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, requestId_);
      }
      if (projectId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, projectId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest) obj;

      if (!getRequestId()
          .equals(other.getRequestId())) return false;
      if (getProjectId()
          != other.getProjectId()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REQUESTID_FIELD_NUMBER;
      hash = (53 * hash) + getRequestId().hashCode();
      hash = (37 * hash) + PROJECTID_FIELD_NUMBER;
      hash = (53 * hash) + getProjectId();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityLimitListRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.DescribeVideoQualityLimitListRequest)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        requestId_ = "";

        projectId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest(this);
        result.requestId_ = requestId_;
        result.projectId_ = projectId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest.getDefaultInstance()) return this;
        if (!other.getRequestId().isEmpty()) {
          requestId_ = other.requestId_;
          onChanged();
        }
        if (other.getProjectId() != 0) {
          setProjectId(other.getProjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                requestId_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 16: {
                projectId_ = input.readUInt32();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object requestId_ = "";
      /**
       * <code>string RequestId = 1;</code>
       * @return The requestId.
       */
      public java.lang.String getRequestId() {
        java.lang.Object ref = requestId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          requestId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string RequestId = 1;</code>
       * @return The bytes for requestId.
       */
      public com.google.protobuf.ByteString
          getRequestIdBytes() {
        java.lang.Object ref = requestId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          requestId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string RequestId = 1;</code>
       * @param value The requestId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string RequestId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestId() {
        
        requestId_ = getDefaultInstance().getRequestId();
        onChanged();
        return this;
      }
      /**
       * <code>string RequestId = 1;</code>
       * @param value The bytes for requestId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        requestId_ = value;
        onChanged();
        return this;
      }

      private int projectId_ ;
      /**
       * <code>uint32 ProjectId = 2;</code>
       * @return The projectId.
       */
      @java.lang.Override
      public int getProjectId() {
        return projectId_;
      }
      /**
       * <code>uint32 ProjectId = 2;</code>
       * @param value The projectId to set.
       * @return This builder for chaining.
       */
      public Builder setProjectId(int value) {
        
        projectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ProjectId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProjectId() {
        
        projectId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.DescribeVideoQualityLimitListRequest)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.DescribeVideoQualityLimitListRequest)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DescribeVideoQualityLimitListRequest>
        PARSER = new com.google.protobuf.AbstractParser<DescribeVideoQualityLimitListRequest>() {
      @java.lang.Override
      public DescribeVideoQualityLimitListRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DescribeVideoQualityLimitListRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DescribeVideoQualityLimitListRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescribeVideoQualityLimitListResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.DescribeVideoQualityLimitListResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> 
        getVideoDefectLimitListList();
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getVideoDefectLimitList(int index);
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    int getVideoDefectLimitListCount();
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
        getVideoDefectLimitListOrBuilderList();
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder getVideoDefectLimitListOrBuilder(
        int index);

    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> 
        getAudioDefectLimitListList();
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getAudioDefectLimitList(int index);
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    int getAudioDefectLimitListCount();
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
        getAudioDefectLimitListOrBuilderList();
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder getAudioDefectLimitListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityLimitListResponse}
   */
  public static final class DescribeVideoQualityLimitListResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.DescribeVideoQualityLimitListResponse)
      DescribeVideoQualityLimitListResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DescribeVideoQualityLimitListResponse.newBuilder() to construct.
    private DescribeVideoQualityLimitListResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DescribeVideoQualityLimitListResponse() {
      videoDefectLimitList_ = java.util.Collections.emptyList();
      audioDefectLimitList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DescribeVideoQualityLimitListResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse.Builder.class);
    }

    public static final int VIDEODEFECTLIMITLIST_FIELD_NUMBER = 2;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> videoDefectLimitList_;
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> getVideoDefectLimitListList() {
      return videoDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
        getVideoDefectLimitListOrBuilderList() {
      return videoDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    @java.lang.Override
    public int getVideoDefectLimitListCount() {
      return videoDefectLimitList_.size();
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getVideoDefectLimitList(int index) {
      return videoDefectLimitList_.get(index);
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder getVideoDefectLimitListOrBuilder(
        int index) {
      return videoDefectLimitList_.get(index);
    }

    public static final int AUDIODEFECTLIMITLIST_FIELD_NUMBER = 3;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> audioDefectLimitList_;
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> getAudioDefectLimitListList() {
      return audioDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
        getAudioDefectLimitListOrBuilderList() {
      return audioDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    @java.lang.Override
    public int getAudioDefectLimitListCount() {
      return audioDefectLimitList_.size();
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getAudioDefectLimitList(int index) {
      return audioDefectLimitList_.get(index);
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder getAudioDefectLimitListOrBuilder(
        int index) {
      return audioDefectLimitList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < videoDefectLimitList_.size(); i++) {
        output.writeMessage(2, videoDefectLimitList_.get(i));
      }
      for (int i = 0; i < audioDefectLimitList_.size(); i++) {
        output.writeMessage(3, audioDefectLimitList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < videoDefectLimitList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, videoDefectLimitList_.get(i));
      }
      for (int i = 0; i < audioDefectLimitList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, audioDefectLimitList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse) obj;

      if (!getVideoDefectLimitListList()
          .equals(other.getVideoDefectLimitListList())) return false;
      if (!getAudioDefectLimitListList()
          .equals(other.getAudioDefectLimitListList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVideoDefectLimitListCount() > 0) {
        hash = (37 * hash) + VIDEODEFECTLIMITLIST_FIELD_NUMBER;
        hash = (53 * hash) + getVideoDefectLimitListList().hashCode();
      }
      if (getAudioDefectLimitListCount() > 0) {
        hash = (37 * hash) + AUDIODEFECTLIMITLIST_FIELD_NUMBER;
        hash = (53 * hash) + getAudioDefectLimitListList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityLimitListResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.DescribeVideoQualityLimitListResponse)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (videoDefectLimitListBuilder_ == null) {
          videoDefectLimitList_ = java.util.Collections.emptyList();
        } else {
          videoDefectLimitList_ = null;
          videoDefectLimitListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (audioDefectLimitListBuilder_ == null) {
          audioDefectLimitList_ = java.util.Collections.emptyList();
        } else {
          audioDefectLimitList_ = null;
          audioDefectLimitListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse(this);
        int from_bitField0_ = bitField0_;
        if (videoDefectLimitListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            videoDefectLimitList_ = java.util.Collections.unmodifiableList(videoDefectLimitList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.videoDefectLimitList_ = videoDefectLimitList_;
        } else {
          result.videoDefectLimitList_ = videoDefectLimitListBuilder_.build();
        }
        if (audioDefectLimitListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            audioDefectLimitList_ = java.util.Collections.unmodifiableList(audioDefectLimitList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.audioDefectLimitList_ = audioDefectLimitList_;
        } else {
          result.audioDefectLimitList_ = audioDefectLimitListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse.getDefaultInstance()) return this;
        if (videoDefectLimitListBuilder_ == null) {
          if (!other.videoDefectLimitList_.isEmpty()) {
            if (videoDefectLimitList_.isEmpty()) {
              videoDefectLimitList_ = other.videoDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVideoDefectLimitListIsMutable();
              videoDefectLimitList_.addAll(other.videoDefectLimitList_);
            }
            onChanged();
          }
        } else {
          if (!other.videoDefectLimitList_.isEmpty()) {
            if (videoDefectLimitListBuilder_.isEmpty()) {
              videoDefectLimitListBuilder_.dispose();
              videoDefectLimitListBuilder_ = null;
              videoDefectLimitList_ = other.videoDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              videoDefectLimitListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVideoDefectLimitListFieldBuilder() : null;
            } else {
              videoDefectLimitListBuilder_.addAllMessages(other.videoDefectLimitList_);
            }
          }
        }
        if (audioDefectLimitListBuilder_ == null) {
          if (!other.audioDefectLimitList_.isEmpty()) {
            if (audioDefectLimitList_.isEmpty()) {
              audioDefectLimitList_ = other.audioDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAudioDefectLimitListIsMutable();
              audioDefectLimitList_.addAll(other.audioDefectLimitList_);
            }
            onChanged();
          }
        } else {
          if (!other.audioDefectLimitList_.isEmpty()) {
            if (audioDefectLimitListBuilder_.isEmpty()) {
              audioDefectLimitListBuilder_.dispose();
              audioDefectLimitListBuilder_ = null;
              audioDefectLimitList_ = other.audioDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              audioDefectLimitListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAudioDefectLimitListFieldBuilder() : null;
            } else {
              audioDefectLimitListBuilder_.addAllMessages(other.audioDefectLimitList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.parser(),
                        extensionRegistry);
                if (videoDefectLimitListBuilder_ == null) {
                  ensureVideoDefectLimitListIsMutable();
                  videoDefectLimitList_.add(m);
                } else {
                  videoDefectLimitListBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.parser(),
                        extensionRegistry);
                if (audioDefectLimitListBuilder_ == null) {
                  ensureAudioDefectLimitListIsMutable();
                  audioDefectLimitList_.add(m);
                } else {
                  audioDefectLimitListBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> videoDefectLimitList_ =
        java.util.Collections.emptyList();
      private void ensureVideoDefectLimitListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          videoDefectLimitList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit>(videoDefectLimitList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> videoDefectLimitListBuilder_;

      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> getVideoDefectLimitListList() {
        if (videoDefectLimitListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(videoDefectLimitList_);
        } else {
          return videoDefectLimitListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public int getVideoDefectLimitListCount() {
        if (videoDefectLimitListBuilder_ == null) {
          return videoDefectLimitList_.size();
        } else {
          return videoDefectLimitListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getVideoDefectLimitList(int index) {
        if (videoDefectLimitListBuilder_ == null) {
          return videoDefectLimitList_.get(index);
        } else {
          return videoDefectLimitListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder setVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit value) {
        if (videoDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.set(index, value);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder setVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder builderForValue) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.set(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectLimitListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder addVideoDefectLimitList(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit value) {
        if (videoDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(value);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder addVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit value) {
        if (videoDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(index, value);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder addVideoDefectLimitList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder builderForValue) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(builderForValue.build());
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder addVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder builderForValue) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder addAllVideoDefectLimitList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> values) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, videoDefectLimitList_);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder clearVideoDefectLimitList() {
        if (videoDefectLimitListBuilder_ == null) {
          videoDefectLimitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public Builder removeVideoDefectLimitList(int index) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.remove(index);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder getVideoDefectLimitListBuilder(
          int index) {
        return getVideoDefectLimitListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder getVideoDefectLimitListOrBuilder(
          int index) {
        if (videoDefectLimitListBuilder_ == null) {
          return videoDefectLimitList_.get(index);  } else {
          return videoDefectLimitListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
           getVideoDefectLimitListOrBuilderList() {
        if (videoDefectLimitListBuilder_ != null) {
          return videoDefectLimitListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(videoDefectLimitList_);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder addVideoDefectLimitListBuilder() {
        return getVideoDefectLimitListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder addVideoDefectLimitListBuilder(
          int index) {
        return getVideoDefectLimitListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder> 
           getVideoDefectLimitListBuilderList() {
        return getVideoDefectLimitListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
          getVideoDefectLimitListFieldBuilder() {
        if (videoDefectLimitListBuilder_ == null) {
          videoDefectLimitListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder>(
                  videoDefectLimitList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          videoDefectLimitList_ = null;
        }
        return videoDefectLimitListBuilder_;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> audioDefectLimitList_ =
        java.util.Collections.emptyList();
      private void ensureAudioDefectLimitListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          audioDefectLimitList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit>(audioDefectLimitList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> audioDefectLimitListBuilder_;

      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> getAudioDefectLimitListList() {
        if (audioDefectLimitListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(audioDefectLimitList_);
        } else {
          return audioDefectLimitListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public int getAudioDefectLimitListCount() {
        if (audioDefectLimitListBuilder_ == null) {
          return audioDefectLimitList_.size();
        } else {
          return audioDefectLimitListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getAudioDefectLimitList(int index) {
        if (audioDefectLimitListBuilder_ == null) {
          return audioDefectLimitList_.get(index);
        } else {
          return audioDefectLimitListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder setAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit value) {
        if (audioDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.set(index, value);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder setAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder builderForValue) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.set(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectLimitListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder addAudioDefectLimitList(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit value) {
        if (audioDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(value);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder addAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit value) {
        if (audioDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(index, value);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder addAudioDefectLimitList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder builderForValue) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(builderForValue.build());
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder addAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder builderForValue) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder addAllAudioDefectLimitList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> values) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, audioDefectLimitList_);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder clearAudioDefectLimitList() {
        if (audioDefectLimitListBuilder_ == null) {
          audioDefectLimitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public Builder removeAudioDefectLimitList(int index) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.remove(index);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder getAudioDefectLimitListBuilder(
          int index) {
        return getAudioDefectLimitListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder getAudioDefectLimitListOrBuilder(
          int index) {
        if (audioDefectLimitListBuilder_ == null) {
          return audioDefectLimitList_.get(index);  } else {
          return audioDefectLimitListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
           getAudioDefectLimitListOrBuilderList() {
        if (audioDefectLimitListBuilder_ != null) {
          return audioDefectLimitListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(audioDefectLimitList_);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder addAudioDefectLimitListBuilder() {
        return getAudioDefectLimitListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder addAudioDefectLimitListBuilder(
          int index) {
        return getAudioDefectLimitListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 3;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder> 
           getAudioDefectLimitListBuilderList() {
        return getAudioDefectLimitListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
          getAudioDefectLimitListFieldBuilder() {
        if (audioDefectLimitListBuilder_ == null) {
          audioDefectLimitListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder>(
                  audioDefectLimitList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          audioDefectLimitList_ = null;
        }
        return audioDefectLimitListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.DescribeVideoQualityLimitListResponse)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.DescribeVideoQualityLimitListResponse)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DescribeVideoQualityLimitListResponse>
        PARSER = new com.google.protobuf.AbstractParser<DescribeVideoQualityLimitListResponse>() {
      @java.lang.Override
      public DescribeVideoQualityLimitListResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DescribeVideoQualityLimitListResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DescribeVideoQualityLimitListResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityLimitListResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescribeVideoQualityEvaluationTaskDataRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string TaskId = 1;</code>
     * @return The taskId.
     */
    java.lang.String getTaskId();
    /**
     * <code>string TaskId = 1;</code>
     * @return The bytes for taskId.
     */
    com.google.protobuf.ByteString
        getTaskIdBytes();

    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> 
        getVideoDefectLimitListList();
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getVideoDefectLimitList(int index);
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    int getVideoDefectLimitListCount();
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
        getVideoDefectLimitListOrBuilderList();
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder getVideoDefectLimitListOrBuilder(
        int index);

    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> 
        getAudioDefectLimitListList();
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getAudioDefectLimitList(int index);
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    int getAudioDefectLimitListCount();
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
        getAudioDefectLimitListOrBuilderList();
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder getAudioDefectLimitListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataRequest}
   */
  public static final class DescribeVideoQualityEvaluationTaskDataRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataRequest)
      DescribeVideoQualityEvaluationTaskDataRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DescribeVideoQualityEvaluationTaskDataRequest.newBuilder() to construct.
    private DescribeVideoQualityEvaluationTaskDataRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DescribeVideoQualityEvaluationTaskDataRequest() {
      taskId_ = "";
      videoDefectLimitList_ = java.util.Collections.emptyList();
      audioDefectLimitList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DescribeVideoQualityEvaluationTaskDataRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest.Builder.class);
    }

    public static final int TASKID_FIELD_NUMBER = 1;
    private volatile java.lang.Object taskId_;
    /**
     * <code>string TaskId = 1;</code>
     * @return The taskId.
     */
    @java.lang.Override
    public java.lang.String getTaskId() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskId_ = s;
        return s;
      }
    }
    /**
     * <code>string TaskId = 1;</code>
     * @return The bytes for taskId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTaskIdBytes() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VIDEODEFECTLIMITLIST_FIELD_NUMBER = 6;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> videoDefectLimitList_;
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> getVideoDefectLimitListList() {
      return videoDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
        getVideoDefectLimitListOrBuilderList() {
      return videoDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    @java.lang.Override
    public int getVideoDefectLimitListCount() {
      return videoDefectLimitList_.size();
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getVideoDefectLimitList(int index) {
      return videoDefectLimitList_.get(index);
    }
    /**
     * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder getVideoDefectLimitListOrBuilder(
        int index) {
      return videoDefectLimitList_.get(index);
    }

    public static final int AUDIODEFECTLIMITLIST_FIELD_NUMBER = 7;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> audioDefectLimitList_;
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> getAudioDefectLimitListList() {
      return audioDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
        getAudioDefectLimitListOrBuilderList() {
      return audioDefectLimitList_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    @java.lang.Override
    public int getAudioDefectLimitListCount() {
      return audioDefectLimitList_.size();
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getAudioDefectLimitList(int index) {
      return audioDefectLimitList_.get(index);
    }
    /**
     * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder getAudioDefectLimitListOrBuilder(
        int index) {
      return audioDefectLimitList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, taskId_);
      }
      for (int i = 0; i < videoDefectLimitList_.size(); i++) {
        output.writeMessage(6, videoDefectLimitList_.get(i));
      }
      for (int i = 0; i < audioDefectLimitList_.size(); i++) {
        output.writeMessage(7, audioDefectLimitList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, taskId_);
      }
      for (int i = 0; i < videoDefectLimitList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, videoDefectLimitList_.get(i));
      }
      for (int i = 0; i < audioDefectLimitList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, audioDefectLimitList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest) obj;

      if (!getTaskId()
          .equals(other.getTaskId())) return false;
      if (!getVideoDefectLimitListList()
          .equals(other.getVideoDefectLimitListList())) return false;
      if (!getAudioDefectLimitListList()
          .equals(other.getAudioDefectLimitListList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TASKID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskId().hashCode();
      if (getVideoDefectLimitListCount() > 0) {
        hash = (37 * hash) + VIDEODEFECTLIMITLIST_FIELD_NUMBER;
        hash = (53 * hash) + getVideoDefectLimitListList().hashCode();
      }
      if (getAudioDefectLimitListCount() > 0) {
        hash = (37 * hash) + AUDIODEFECTLIMITLIST_FIELD_NUMBER;
        hash = (53 * hash) + getAudioDefectLimitListList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataRequest)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        taskId_ = "";

        if (videoDefectLimitListBuilder_ == null) {
          videoDefectLimitList_ = java.util.Collections.emptyList();
        } else {
          videoDefectLimitList_ = null;
          videoDefectLimitListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (audioDefectLimitListBuilder_ == null) {
          audioDefectLimitList_ = java.util.Collections.emptyList();
        } else {
          audioDefectLimitList_ = null;
          audioDefectLimitListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest(this);
        int from_bitField0_ = bitField0_;
        result.taskId_ = taskId_;
        if (videoDefectLimitListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            videoDefectLimitList_ = java.util.Collections.unmodifiableList(videoDefectLimitList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.videoDefectLimitList_ = videoDefectLimitList_;
        } else {
          result.videoDefectLimitList_ = videoDefectLimitListBuilder_.build();
        }
        if (audioDefectLimitListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            audioDefectLimitList_ = java.util.Collections.unmodifiableList(audioDefectLimitList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.audioDefectLimitList_ = audioDefectLimitList_;
        } else {
          result.audioDefectLimitList_ = audioDefectLimitListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest.getDefaultInstance()) return this;
        if (!other.getTaskId().isEmpty()) {
          taskId_ = other.taskId_;
          onChanged();
        }
        if (videoDefectLimitListBuilder_ == null) {
          if (!other.videoDefectLimitList_.isEmpty()) {
            if (videoDefectLimitList_.isEmpty()) {
              videoDefectLimitList_ = other.videoDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVideoDefectLimitListIsMutable();
              videoDefectLimitList_.addAll(other.videoDefectLimitList_);
            }
            onChanged();
          }
        } else {
          if (!other.videoDefectLimitList_.isEmpty()) {
            if (videoDefectLimitListBuilder_.isEmpty()) {
              videoDefectLimitListBuilder_.dispose();
              videoDefectLimitListBuilder_ = null;
              videoDefectLimitList_ = other.videoDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              videoDefectLimitListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVideoDefectLimitListFieldBuilder() : null;
            } else {
              videoDefectLimitListBuilder_.addAllMessages(other.videoDefectLimitList_);
            }
          }
        }
        if (audioDefectLimitListBuilder_ == null) {
          if (!other.audioDefectLimitList_.isEmpty()) {
            if (audioDefectLimitList_.isEmpty()) {
              audioDefectLimitList_ = other.audioDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAudioDefectLimitListIsMutable();
              audioDefectLimitList_.addAll(other.audioDefectLimitList_);
            }
            onChanged();
          }
        } else {
          if (!other.audioDefectLimitList_.isEmpty()) {
            if (audioDefectLimitListBuilder_.isEmpty()) {
              audioDefectLimitListBuilder_.dispose();
              audioDefectLimitListBuilder_ = null;
              audioDefectLimitList_ = other.audioDefectLimitList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              audioDefectLimitListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAudioDefectLimitListFieldBuilder() : null;
            } else {
              audioDefectLimitListBuilder_.addAllMessages(other.audioDefectLimitList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                taskId_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 50: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.parser(),
                        extensionRegistry);
                if (videoDefectLimitListBuilder_ == null) {
                  ensureVideoDefectLimitListIsMutable();
                  videoDefectLimitList_.add(m);
                } else {
                  videoDefectLimitListBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 58: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.parser(),
                        extensionRegistry);
                if (audioDefectLimitListBuilder_ == null) {
                  ensureAudioDefectLimitListIsMutable();
                  audioDefectLimitList_.add(m);
                } else {
                  audioDefectLimitListBuilder_.addMessage(m);
                }
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object taskId_ = "";
      /**
       * <code>string TaskId = 1;</code>
       * @return The taskId.
       */
      public java.lang.String getTaskId() {
        java.lang.Object ref = taskId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          taskId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string TaskId = 1;</code>
       * @return The bytes for taskId.
       */
      public com.google.protobuf.ByteString
          getTaskIdBytes() {
        java.lang.Object ref = taskId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string TaskId = 1;</code>
       * @param value The taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string TaskId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTaskId() {
        
        taskId_ = getDefaultInstance().getTaskId();
        onChanged();
        return this;
      }
      /**
       * <code>string TaskId = 1;</code>
       * @param value The bytes for taskId to set.
       * @return This builder for chaining.
       */
      public Builder setTaskIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> videoDefectLimitList_ =
        java.util.Collections.emptyList();
      private void ensureVideoDefectLimitListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          videoDefectLimitList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit>(videoDefectLimitList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> videoDefectLimitListBuilder_;

      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> getVideoDefectLimitListList() {
        if (videoDefectLimitListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(videoDefectLimitList_);
        } else {
          return videoDefectLimitListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public int getVideoDefectLimitListCount() {
        if (videoDefectLimitListBuilder_ == null) {
          return videoDefectLimitList_.size();
        } else {
          return videoDefectLimitListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit getVideoDefectLimitList(int index) {
        if (videoDefectLimitListBuilder_ == null) {
          return videoDefectLimitList_.get(index);
        } else {
          return videoDefectLimitListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder setVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit value) {
        if (videoDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.set(index, value);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder setVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder builderForValue) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.set(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectLimitListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder addVideoDefectLimitList(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit value) {
        if (videoDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(value);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder addVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit value) {
        if (videoDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(index, value);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder addVideoDefectLimitList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder builderForValue) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(builderForValue.build());
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder addVideoDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder builderForValue) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.add(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder addAllVideoDefectLimitList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit> values) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, videoDefectLimitList_);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder clearVideoDefectLimitList() {
        if (videoDefectLimitListBuilder_ == null) {
          videoDefectLimitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public Builder removeVideoDefectLimitList(int index) {
        if (videoDefectLimitListBuilder_ == null) {
          ensureVideoDefectLimitListIsMutable();
          videoDefectLimitList_.remove(index);
          onChanged();
        } else {
          videoDefectLimitListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder getVideoDefectLimitListBuilder(
          int index) {
        return getVideoDefectLimitListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder getVideoDefectLimitListOrBuilder(
          int index) {
        if (videoDefectLimitListBuilder_ == null) {
          return videoDefectLimitList_.get(index);  } else {
          return videoDefectLimitListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
           getVideoDefectLimitListOrBuilderList() {
        if (videoDefectLimitListBuilder_ != null) {
          return videoDefectLimitListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(videoDefectLimitList_);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder addVideoDefectLimitListBuilder() {
        return getVideoDefectLimitListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder addVideoDefectLimitListBuilder(
          int index) {
        return getVideoDefectLimitListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.VideoDefectLimit VideoDefectLimitList = 6;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder> 
           getVideoDefectLimitListBuilderList() {
        return getVideoDefectLimitListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder> 
          getVideoDefectLimitListFieldBuilder() {
        if (videoDefectLimitListBuilder_ == null) {
          videoDefectLimitListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectLimitOrBuilder>(
                  videoDefectLimitList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          videoDefectLimitList_ = null;
        }
        return videoDefectLimitListBuilder_;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> audioDefectLimitList_ =
        java.util.Collections.emptyList();
      private void ensureAudioDefectLimitListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          audioDefectLimitList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit>(audioDefectLimitList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> audioDefectLimitListBuilder_;

      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> getAudioDefectLimitListList() {
        if (audioDefectLimitListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(audioDefectLimitList_);
        } else {
          return audioDefectLimitListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public int getAudioDefectLimitListCount() {
        if (audioDefectLimitListBuilder_ == null) {
          return audioDefectLimitList_.size();
        } else {
          return audioDefectLimitListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit getAudioDefectLimitList(int index) {
        if (audioDefectLimitListBuilder_ == null) {
          return audioDefectLimitList_.get(index);
        } else {
          return audioDefectLimitListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder setAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit value) {
        if (audioDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.set(index, value);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder setAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder builderForValue) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.set(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectLimitListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder addAudioDefectLimitList(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit value) {
        if (audioDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(value);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder addAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit value) {
        if (audioDefectLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(index, value);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder addAudioDefectLimitList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder builderForValue) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(builderForValue.build());
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder addAudioDefectLimitList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder builderForValue) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.add(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder addAllAudioDefectLimitList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit> values) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, audioDefectLimitList_);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder clearAudioDefectLimitList() {
        if (audioDefectLimitListBuilder_ == null) {
          audioDefectLimitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public Builder removeAudioDefectLimitList(int index) {
        if (audioDefectLimitListBuilder_ == null) {
          ensureAudioDefectLimitListIsMutable();
          audioDefectLimitList_.remove(index);
          onChanged();
        } else {
          audioDefectLimitListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder getAudioDefectLimitListBuilder(
          int index) {
        return getAudioDefectLimitListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder getAudioDefectLimitListOrBuilder(
          int index) {
        if (audioDefectLimitListBuilder_ == null) {
          return audioDefectLimitList_.get(index);  } else {
          return audioDefectLimitListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
           getAudioDefectLimitListOrBuilderList() {
        if (audioDefectLimitListBuilder_ != null) {
          return audioDefectLimitListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(audioDefectLimitList_);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder addAudioDefectLimitListBuilder() {
        return getAudioDefectLimitListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder addAudioDefectLimitListBuilder(
          int index) {
        return getAudioDefectLimitListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AudioDefectLimit AudioDefectLimitList = 7;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder> 
           getAudioDefectLimitListBuilderList() {
        return getAudioDefectLimitListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder> 
          getAudioDefectLimitListFieldBuilder() {
        if (audioDefectLimitListBuilder_ == null) {
          audioDefectLimitListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimit.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectLimitOrBuilder>(
                  audioDefectLimitList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          audioDefectLimitList_ = null;
        }
        return audioDefectLimitListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataRequest)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataRequest)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DescribeVideoQualityEvaluationTaskDataRequest>
        PARSER = new com.google.protobuf.AbstractParser<DescribeVideoQualityEvaluationTaskDataRequest>() {
      @java.lang.Override
      public DescribeVideoQualityEvaluationTaskDataRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DescribeVideoQualityEvaluationTaskDataRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DescribeVideoQualityEvaluationTaskDataRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AppearTimeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.AppearTimeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float StartTimeStamp = 1;</code>
     * @return The startTimeStamp.
     */
    float getStartTimeStamp();

    /**
     * <code>float EndTimeStamp = 2;</code>
     * @return The endTimeStamp.
     */
    float getEndTimeStamp();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.AppearTimeInfo}
   */
  public static final class AppearTimeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.AppearTimeInfo)
      AppearTimeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AppearTimeInfo.newBuilder() to construct.
    private AppearTimeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AppearTimeInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AppearTimeInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AppearTimeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AppearTimeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder.class);
    }

    public static final int STARTTIMESTAMP_FIELD_NUMBER = 1;
    private float startTimeStamp_;
    /**
     * <code>float StartTimeStamp = 1;</code>
     * @return The startTimeStamp.
     */
    @java.lang.Override
    public float getStartTimeStamp() {
      return startTimeStamp_;
    }

    public static final int ENDTIMESTAMP_FIELD_NUMBER = 2;
    private float endTimeStamp_;
    /**
     * <code>float EndTimeStamp = 2;</code>
     * @return The endTimeStamp.
     */
    @java.lang.Override
    public float getEndTimeStamp() {
      return endTimeStamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(startTimeStamp_) != 0) {
        output.writeFloat(1, startTimeStamp_);
      }
      if (java.lang.Float.floatToRawIntBits(endTimeStamp_) != 0) {
        output.writeFloat(2, endTimeStamp_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(startTimeStamp_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, startTimeStamp_);
      }
      if (java.lang.Float.floatToRawIntBits(endTimeStamp_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, endTimeStamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo) obj;

      if (java.lang.Float.floatToIntBits(getStartTimeStamp())
          != java.lang.Float.floatToIntBits(
              other.getStartTimeStamp())) return false;
      if (java.lang.Float.floatToIntBits(getEndTimeStamp())
          != java.lang.Float.floatToIntBits(
              other.getEndTimeStamp())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STARTTIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getStartTimeStamp());
      hash = (37 * hash) + ENDTIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getEndTimeStamp());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.AppearTimeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.AppearTimeInfo)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AppearTimeInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AppearTimeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        startTimeStamp_ = 0F;

        endTimeStamp_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AppearTimeInfo_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo(this);
        result.startTimeStamp_ = startTimeStamp_;
        result.endTimeStamp_ = endTimeStamp_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance()) return this;
        if (other.getStartTimeStamp() != 0F) {
          setStartTimeStamp(other.getStartTimeStamp());
        }
        if (other.getEndTimeStamp() != 0F) {
          setEndTimeStamp(other.getEndTimeStamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                startTimeStamp_ = input.readFloat();

                break;
              } // case 13
              case 21: {
                endTimeStamp_ = input.readFloat();

                break;
              } // case 21
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private float startTimeStamp_ ;
      /**
       * <code>float StartTimeStamp = 1;</code>
       * @return The startTimeStamp.
       */
      @java.lang.Override
      public float getStartTimeStamp() {
        return startTimeStamp_;
      }
      /**
       * <code>float StartTimeStamp = 1;</code>
       * @param value The startTimeStamp to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimeStamp(float value) {
        
        startTimeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float StartTimeStamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimeStamp() {
        
        startTimeStamp_ = 0F;
        onChanged();
        return this;
      }

      private float endTimeStamp_ ;
      /**
       * <code>float EndTimeStamp = 2;</code>
       * @return The endTimeStamp.
       */
      @java.lang.Override
      public float getEndTimeStamp() {
        return endTimeStamp_;
      }
      /**
       * <code>float EndTimeStamp = 2;</code>
       * @param value The endTimeStamp to set.
       * @return This builder for chaining.
       */
      public Builder setEndTimeStamp(float value) {
        
        endTimeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float EndTimeStamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTimeStamp() {
        
        endTimeStamp_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.AppearTimeInfo)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.AppearTimeInfo)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AppearTimeInfo>
        PARSER = new com.google.protobuf.AbstractParser<AppearTimeInfo>() {
      @java.lang.Override
      public AppearTimeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AppearTimeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AppearTimeInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VideoDefectInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.VideoDefectInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    int getDefectTypeValue();
    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType getDefectType();

    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> 
        getDefectInfoList();
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefectInfo(int index);
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    int getDefectInfoCount();
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
        getDefectInfoOrBuilderList();
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getDefectInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.VideoDefectInfo}
   */
  public static final class VideoDefectInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.VideoDefectInfo)
      VideoDefectInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VideoDefectInfo.newBuilder() to construct.
    private VideoDefectInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VideoDefectInfo() {
      defectType_ = 0;
      defectInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VideoDefectInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder.class);
    }

    /**
     * Protobuf enum {@code trpc.media.videoquality.VideoDefectInfo.VideoDefectType}
     */
    public enum VideoDefectType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * 预留不使用
       * </pre>
       *
       * <code>kUnknown = 0;</code>
       */
      kUnknown(0),
      /**
       * <pre>
       * 雪花噪点
       * </pre>
       *
       * <code>kSnowNoise = 1;</code>
       */
      kSnowNoise(1),
      /**
       * <pre>
       * 彩条
       * </pre>
       *
       * <code>kColorBar = 2;</code>
       */
      kColorBar(2),
      /**
       * <pre>
       * 马赛克
       * </pre>
       *
       * <code>kMosaic = 3;</code>
       */
      kMosaic(3),
      /**
       * <pre>
       * 黑边
       * </pre>
       *
       * <code>kBlackBorder = 4;</code>
       */
      kBlackBorder(4),
      /**
       * <pre>
       * 白边
       * </pre>
       *
       * <code>kWhiteBorder = 5;</code>
       */
      kWhiteBorder(5),
      /**
       * <pre>
       * 毛玻璃边
       * </pre>
       *
       * <code>kFrostingBorder = 6;</code>
       */
      kFrostingBorder(6),
      /**
       * <pre>
       * 画面抖动
       * </pre>
       *
       * <code>kShaking = 7;</code>
       */
      kShaking(7),
      /**
       * <pre>
       * 画面静止
       * </pre>
       *
       * <code>kStatic = 8;</code>
       */
      kStatic(8),
      /**
       * <pre>
       * 欠曝光
       * </pre>
       *
       * <code>kUnderExposure = 9;</code>
       */
      kUnderExposure(9),
      /**
       * <pre>
       * 过曝光
       * </pre>
       *
       * <code>kOverExposure = 10;</code>
       */
      kOverExposure(10),
      /**
       * <pre>
       * 噪声图像
       * </pre>
       *
       * <code>kNoiseImage = 11;</code>
       */
      kNoiseImage(11),
      /**
       * <pre>
       * 模糊图像
       * </pre>
       *
       * <code>kBlurImage = 12;</code>
       */
      kBlurImage(12),
      /**
       * <pre>
       * 条形码
       * </pre>
       *
       * <code>kBarCode = 13;</code>
       */
      kBarCode(13),
      /**
       * <pre>
       * 二维码
       * </pre>
       *
       * <code>kQrCode = 14;</code>
       */
      kQrCode(14),
      /**
       * <pre>
       * 花屏
       * </pre>
       *
       * <code>kHuaPing = 15;</code>
       */
      kHuaPing(15),
      /**
       * <pre>
       * 纯色屏
       * </pre>
       *
       * <code>kPureImage = 16;</code>
       */
      kPureImage(16),
      /**
       * <pre>
       * 微信码
       * </pre>
       *
       * <code>kWxCode = 17;</code>
       */
      kWxCode(17),
      /**
       * <pre>
       * 画幅变化
       * </pre>
       *
       * <code>kSizeVariant = 18;</code>
       */
      kSizeVariant(18),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * 预留不使用
       * </pre>
       *
       * <code>kUnknown = 0;</code>
       */
      public static final int kUnknown_VALUE = 0;
      /**
       * <pre>
       * 雪花噪点
       * </pre>
       *
       * <code>kSnowNoise = 1;</code>
       */
      public static final int kSnowNoise_VALUE = 1;
      /**
       * <pre>
       * 彩条
       * </pre>
       *
       * <code>kColorBar = 2;</code>
       */
      public static final int kColorBar_VALUE = 2;
      /**
       * <pre>
       * 马赛克
       * </pre>
       *
       * <code>kMosaic = 3;</code>
       */
      public static final int kMosaic_VALUE = 3;
      /**
       * <pre>
       * 黑边
       * </pre>
       *
       * <code>kBlackBorder = 4;</code>
       */
      public static final int kBlackBorder_VALUE = 4;
      /**
       * <pre>
       * 白边
       * </pre>
       *
       * <code>kWhiteBorder = 5;</code>
       */
      public static final int kWhiteBorder_VALUE = 5;
      /**
       * <pre>
       * 毛玻璃边
       * </pre>
       *
       * <code>kFrostingBorder = 6;</code>
       */
      public static final int kFrostingBorder_VALUE = 6;
      /**
       * <pre>
       * 画面抖动
       * </pre>
       *
       * <code>kShaking = 7;</code>
       */
      public static final int kShaking_VALUE = 7;
      /**
       * <pre>
       * 画面静止
       * </pre>
       *
       * <code>kStatic = 8;</code>
       */
      public static final int kStatic_VALUE = 8;
      /**
       * <pre>
       * 欠曝光
       * </pre>
       *
       * <code>kUnderExposure = 9;</code>
       */
      public static final int kUnderExposure_VALUE = 9;
      /**
       * <pre>
       * 过曝光
       * </pre>
       *
       * <code>kOverExposure = 10;</code>
       */
      public static final int kOverExposure_VALUE = 10;
      /**
       * <pre>
       * 噪声图像
       * </pre>
       *
       * <code>kNoiseImage = 11;</code>
       */
      public static final int kNoiseImage_VALUE = 11;
      /**
       * <pre>
       * 模糊图像
       * </pre>
       *
       * <code>kBlurImage = 12;</code>
       */
      public static final int kBlurImage_VALUE = 12;
      /**
       * <pre>
       * 条形码
       * </pre>
       *
       * <code>kBarCode = 13;</code>
       */
      public static final int kBarCode_VALUE = 13;
      /**
       * <pre>
       * 二维码
       * </pre>
       *
       * <code>kQrCode = 14;</code>
       */
      public static final int kQrCode_VALUE = 14;
      /**
       * <pre>
       * 花屏
       * </pre>
       *
       * <code>kHuaPing = 15;</code>
       */
      public static final int kHuaPing_VALUE = 15;
      /**
       * <pre>
       * 纯色屏
       * </pre>
       *
       * <code>kPureImage = 16;</code>
       */
      public static final int kPureImage_VALUE = 16;
      /**
       * <pre>
       * 微信码
       * </pre>
       *
       * <code>kWxCode = 17;</code>
       */
      public static final int kWxCode_VALUE = 17;
      /**
       * <pre>
       * 画幅变化
       * </pre>
       *
       * <code>kSizeVariant = 18;</code>
       */
      public static final int kSizeVariant_VALUE = 18;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VideoDefectType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static VideoDefectType forNumber(int value) {
        switch (value) {
          case 0: return kUnknown;
          case 1: return kSnowNoise;
          case 2: return kColorBar;
          case 3: return kMosaic;
          case 4: return kBlackBorder;
          case 5: return kWhiteBorder;
          case 6: return kFrostingBorder;
          case 7: return kShaking;
          case 8: return kStatic;
          case 9: return kUnderExposure;
          case 10: return kOverExposure;
          case 11: return kNoiseImage;
          case 12: return kBlurImage;
          case 13: return kBarCode;
          case 14: return kQrCode;
          case 15: return kHuaPing;
          case 16: return kPureImage;
          case 17: return kWxCode;
          case 18: return kSizeVariant;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VideoDefectType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          VideoDefectType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VideoDefectType>() {
              public VideoDefectType findValueByNumber(int number) {
                return VideoDefectType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final VideoDefectType[] VALUES = values();

      public static VideoDefectType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private VideoDefectType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:trpc.media.videoquality.VideoDefectInfo.VideoDefectType)
    }

    public static final int DEFECTTYPE_FIELD_NUMBER = 1;
    private int defectType_;
    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    @java.lang.Override public int getDefectTypeValue() {
      return defectType_;
    }
    /**
     * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    @java.lang.Override public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType getDefectType() {
      @SuppressWarnings("deprecation")
      com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.valueOf(defectType_);
      return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.UNRECOGNIZED : result;
    }

    public static final int DEFECTINFO_FIELD_NUMBER = 2;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> defectInfo_;
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> getDefectInfoList() {
      return defectInfo_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
        getDefectInfoOrBuilderList() {
      return defectInfo_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public int getDefectInfoCount() {
      return defectInfo_.size();
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefectInfo(int index) {
      return defectInfo_.get(index);
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getDefectInfoOrBuilder(
        int index) {
      return defectInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.kUnknown.getNumber()) {
        output.writeEnum(1, defectType_);
      }
      for (int i = 0; i < defectInfo_.size(); i++) {
        output.writeMessage(2, defectInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.kUnknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, defectType_);
      }
      for (int i = 0; i < defectInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, defectInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo) obj;

      if (defectType_ != other.defectType_) return false;
      if (!getDefectInfoList()
          .equals(other.getDefectInfoList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEFECTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + defectType_;
      if (getDefectInfoCount() > 0) {
        hash = (37 * hash) + DEFECTINFO_FIELD_NUMBER;
        hash = (53 * hash) + getDefectInfoList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.VideoDefectInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.VideoDefectInfo)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        defectType_ = 0;

        if (defectInfoBuilder_ == null) {
          defectInfo_ = java.util.Collections.emptyList();
        } else {
          defectInfo_ = null;
          defectInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_VideoDefectInfo_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo(this);
        int from_bitField0_ = bitField0_;
        result.defectType_ = defectType_;
        if (defectInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            defectInfo_ = java.util.Collections.unmodifiableList(defectInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.defectInfo_ = defectInfo_;
        } else {
          result.defectInfo_ = defectInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.getDefaultInstance()) return this;
        if (other.defectType_ != 0) {
          setDefectTypeValue(other.getDefectTypeValue());
        }
        if (defectInfoBuilder_ == null) {
          if (!other.defectInfo_.isEmpty()) {
            if (defectInfo_.isEmpty()) {
              defectInfo_ = other.defectInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDefectInfoIsMutable();
              defectInfo_.addAll(other.defectInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.defectInfo_.isEmpty()) {
            if (defectInfoBuilder_.isEmpty()) {
              defectInfoBuilder_.dispose();
              defectInfoBuilder_ = null;
              defectInfo_ = other.defectInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              defectInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDefectInfoFieldBuilder() : null;
            } else {
              defectInfoBuilder_.addAllMessages(other.defectInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                defectType_ = input.readEnum();

                break;
              } // case 8
              case 18: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.parser(),
                        extensionRegistry);
                if (defectInfoBuilder_ == null) {
                  ensureDefectInfoIsMutable();
                  defectInfo_.add(m);
                } else {
                  defectInfoBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int defectType_ = 0;
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @return The enum numeric value on the wire for defectType.
       */
      @java.lang.Override public int getDefectTypeValue() {
        return defectType_;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @param value The enum numeric value on the wire for defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectTypeValue(int value) {
        
        defectType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @return The defectType.
       */
      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType getDefectType() {
        @SuppressWarnings("deprecation")
        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.valueOf(defectType_);
        return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType.UNRECOGNIZED : result;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @param value The defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectType(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.VideoDefectType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        defectType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.VideoDefectInfo.VideoDefectType DefectType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefectType() {
        
        defectType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> defectInfo_ =
        java.util.Collections.emptyList();
      private void ensureDefectInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          defectInfo_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo>(defectInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> defectInfoBuilder_;

      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> getDefectInfoList() {
        if (defectInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(defectInfo_);
        } else {
          return defectInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public int getDefectInfoCount() {
        if (defectInfoBuilder_ == null) {
          return defectInfo_.size();
        } else {
          return defectInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefectInfo(int index) {
        if (defectInfoBuilder_ == null) {
          return defectInfo_.get(index);
        } else {
          return defectInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder setDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (defectInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefectInfoIsMutable();
          defectInfo_.set(index, value);
          onChanged();
        } else {
          defectInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder setDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder builderForValue) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          defectInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (defectInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefectInfoIsMutable();
          defectInfo_.add(value);
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (defectInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefectInfoIsMutable();
          defectInfo_.add(index, value);
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder builderForValue) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.add(builderForValue.build());
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder builderForValue) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addAllDefectInfo(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> values) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, defectInfo_);
          onChanged();
        } else {
          defectInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder clearDefectInfo() {
        if (defectInfoBuilder_ == null) {
          defectInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          defectInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder removeDefectInfo(int index) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.remove(index);
          onChanged();
        } else {
          defectInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder getDefectInfoBuilder(
          int index) {
        return getDefectInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getDefectInfoOrBuilder(
          int index) {
        if (defectInfoBuilder_ == null) {
          return defectInfo_.get(index);  } else {
          return defectInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
           getDefectInfoOrBuilderList() {
        if (defectInfoBuilder_ != null) {
          return defectInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(defectInfo_);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder addDefectInfoBuilder() {
        return getDefectInfoFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder addDefectInfoBuilder(
          int index) {
        return getDefectInfoFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder> 
           getDefectInfoBuilderList() {
        return getDefectInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
          getDefectInfoFieldBuilder() {
        if (defectInfoBuilder_ == null) {
          defectInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder>(
                  defectInfo_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          defectInfo_ = null;
        }
        return defectInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.VideoDefectInfo)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.VideoDefectInfo)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VideoDefectInfo>
        PARSER = new com.google.protobuf.AbstractParser<VideoDefectInfo>() {
      @java.lang.Override
      public VideoDefectInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<VideoDefectInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VideoDefectInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioDefectInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.AudioDefectInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    int getDefectTypeValue();
    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType getDefectType();

    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> 
        getDefectInfoList();
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefectInfo(int index);
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    int getDefectInfoCount();
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
        getDefectInfoOrBuilderList();
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getDefectInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.AudioDefectInfo}
   */
  public static final class AudioDefectInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.AudioDefectInfo)
      AudioDefectInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioDefectInfo.newBuilder() to construct.
    private AudioDefectInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioDefectInfo() {
      defectType_ = 0;
      defectInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioDefectInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder.class);
    }

    /**
     * Protobuf enum {@code trpc.media.videoquality.AudioDefectInfo.AudioDefectType}
     */
    public enum AudioDefectType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * 预留不使用
       * </pre>
       *
       * <code>kUnknown = 0;</code>
       */
      kUnknown(0),
      /**
       * <pre>
       * 静音
       * </pre>
       *
       * <code>kVolumeMute = 19;</code>
       */
      kVolumeMute(19),
      /**
       * <pre>
       * 低音
       * </pre>
       *
       * <code>kVolumeLow = 20;</code>
       */
      kVolumeLow(20),
      /**
       * <pre>
       * 高音
       * </pre>
       *
       * <code>kVolumeHigh = 21;</code>
       */
      kVolumeHigh(21),
      /**
       * <pre>
       * 无音轨
       * </pre>
       *
       * <code>kNoVolume = 22;</code>
       */
      kNoVolume(22),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * 预留不使用
       * </pre>
       *
       * <code>kUnknown = 0;</code>
       */
      public static final int kUnknown_VALUE = 0;
      /**
       * <pre>
       * 静音
       * </pre>
       *
       * <code>kVolumeMute = 19;</code>
       */
      public static final int kVolumeMute_VALUE = 19;
      /**
       * <pre>
       * 低音
       * </pre>
       *
       * <code>kVolumeLow = 20;</code>
       */
      public static final int kVolumeLow_VALUE = 20;
      /**
       * <pre>
       * 高音
       * </pre>
       *
       * <code>kVolumeHigh = 21;</code>
       */
      public static final int kVolumeHigh_VALUE = 21;
      /**
       * <pre>
       * 无音轨
       * </pre>
       *
       * <code>kNoVolume = 22;</code>
       */
      public static final int kNoVolume_VALUE = 22;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AudioDefectType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AudioDefectType forNumber(int value) {
        switch (value) {
          case 0: return kUnknown;
          case 19: return kVolumeMute;
          case 20: return kVolumeLow;
          case 21: return kVolumeHigh;
          case 22: return kNoVolume;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AudioDefectType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AudioDefectType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AudioDefectType>() {
              public AudioDefectType findValueByNumber(int number) {
                return AudioDefectType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final AudioDefectType[] VALUES = values();

      public static AudioDefectType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AudioDefectType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:trpc.media.videoquality.AudioDefectInfo.AudioDefectType)
    }

    public static final int DEFECTTYPE_FIELD_NUMBER = 1;
    private int defectType_;
    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The enum numeric value on the wire for defectType.
     */
    @java.lang.Override public int getDefectTypeValue() {
      return defectType_;
    }
    /**
     * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
     * @return The defectType.
     */
    @java.lang.Override public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType getDefectType() {
      @SuppressWarnings("deprecation")
      com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.valueOf(defectType_);
      return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.UNRECOGNIZED : result;
    }

    public static final int DEFECTINFO_FIELD_NUMBER = 2;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> defectInfo_;
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> getDefectInfoList() {
      return defectInfo_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
        getDefectInfoOrBuilderList() {
      return defectInfo_;
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public int getDefectInfoCount() {
      return defectInfo_.size();
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefectInfo(int index) {
      return defectInfo_.get(index);
    }
    /**
     * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getDefectInfoOrBuilder(
        int index) {
      return defectInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.kUnknown.getNumber()) {
        output.writeEnum(1, defectType_);
      }
      for (int i = 0; i < defectInfo_.size(); i++) {
        output.writeMessage(2, defectInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (defectType_ != com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.kUnknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, defectType_);
      }
      for (int i = 0; i < defectInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, defectInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo) obj;

      if (defectType_ != other.defectType_) return false;
      if (!getDefectInfoList()
          .equals(other.getDefectInfoList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEFECTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + defectType_;
      if (getDefectInfoCount() > 0) {
        hash = (37 * hash) + DEFECTINFO_FIELD_NUMBER;
        hash = (53 * hash) + getDefectInfoList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.AudioDefectInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.AudioDefectInfo)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        defectType_ = 0;

        if (defectInfoBuilder_ == null) {
          defectInfo_ = java.util.Collections.emptyList();
        } else {
          defectInfo_ = null;
          defectInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_AudioDefectInfo_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo(this);
        int from_bitField0_ = bitField0_;
        result.defectType_ = defectType_;
        if (defectInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            defectInfo_ = java.util.Collections.unmodifiableList(defectInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.defectInfo_ = defectInfo_;
        } else {
          result.defectInfo_ = defectInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.getDefaultInstance()) return this;
        if (other.defectType_ != 0) {
          setDefectTypeValue(other.getDefectTypeValue());
        }
        if (defectInfoBuilder_ == null) {
          if (!other.defectInfo_.isEmpty()) {
            if (defectInfo_.isEmpty()) {
              defectInfo_ = other.defectInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDefectInfoIsMutable();
              defectInfo_.addAll(other.defectInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.defectInfo_.isEmpty()) {
            if (defectInfoBuilder_.isEmpty()) {
              defectInfoBuilder_.dispose();
              defectInfoBuilder_ = null;
              defectInfo_ = other.defectInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              defectInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDefectInfoFieldBuilder() : null;
            } else {
              defectInfoBuilder_.addAllMessages(other.defectInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                defectType_ = input.readEnum();

                break;
              } // case 8
              case 18: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.parser(),
                        extensionRegistry);
                if (defectInfoBuilder_ == null) {
                  ensureDefectInfoIsMutable();
                  defectInfo_.add(m);
                } else {
                  defectInfoBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int defectType_ = 0;
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @return The enum numeric value on the wire for defectType.
       */
      @java.lang.Override public int getDefectTypeValue() {
        return defectType_;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @param value The enum numeric value on the wire for defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectTypeValue(int value) {
        
        defectType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @return The defectType.
       */
      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType getDefectType() {
        @SuppressWarnings("deprecation")
        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType result = com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.valueOf(defectType_);
        return result == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType.UNRECOGNIZED : result;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @param value The defectType to set.
       * @return This builder for chaining.
       */
      public Builder setDefectType(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.AudioDefectType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        defectType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AudioDefectInfo.AudioDefectType DefectType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefectType() {
        
        defectType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> defectInfo_ =
        java.util.Collections.emptyList();
      private void ensureDefectInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          defectInfo_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo>(defectInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> defectInfoBuilder_;

      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> getDefectInfoList() {
        if (defectInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(defectInfo_);
        } else {
          return defectInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public int getDefectInfoCount() {
        if (defectInfoBuilder_ == null) {
          return defectInfo_.size();
        } else {
          return defectInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getDefectInfo(int index) {
        if (defectInfoBuilder_ == null) {
          return defectInfo_.get(index);
        } else {
          return defectInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder setDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (defectInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefectInfoIsMutable();
          defectInfo_.set(index, value);
          onChanged();
        } else {
          defectInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder setDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder builderForValue) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          defectInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (defectInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefectInfoIsMutable();
          defectInfo_.add(value);
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (defectInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefectInfoIsMutable();
          defectInfo_.add(index, value);
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder builderForValue) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.add(builderForValue.build());
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addDefectInfo(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder builderForValue) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          defectInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder addAllDefectInfo(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo> values) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, defectInfo_);
          onChanged();
        } else {
          defectInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder clearDefectInfo() {
        if (defectInfoBuilder_ == null) {
          defectInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          defectInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public Builder removeDefectInfo(int index) {
        if (defectInfoBuilder_ == null) {
          ensureDefectInfoIsMutable();
          defectInfo_.remove(index);
          onChanged();
        } else {
          defectInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder getDefectInfoBuilder(
          int index) {
        return getDefectInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getDefectInfoOrBuilder(
          int index) {
        if (defectInfoBuilder_ == null) {
          return defectInfo_.get(index);  } else {
          return defectInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
           getDefectInfoOrBuilderList() {
        if (defectInfoBuilder_ != null) {
          return defectInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(defectInfo_);
        }
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder addDefectInfoBuilder() {
        return getDefectInfoFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder addDefectInfoBuilder(
          int index) {
        return getDefectInfoFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .trpc.media.videoquality.AppearTimeInfo DefectInfo = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder> 
           getDefectInfoBuilderList() {
        return getDefectInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
          getDefectInfoFieldBuilder() {
        if (defectInfoBuilder_ == null) {
          defectInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder>(
                  defectInfo_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          defectInfo_ = null;
        }
        return defectInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.AudioDefectInfo)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.AudioDefectInfo)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioDefectInfo>
        PARSER = new com.google.protobuf.AbstractParser<AudioDefectInfo>() {
      @java.lang.Override
      public AudioDefectInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AudioDefectInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioDefectInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QualityEvaluationInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.QualityEvaluationInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> 
        getVideoDefectInfoListList();
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getVideoDefectInfoList(int index);
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    int getVideoDefectInfoListCount();
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
        getVideoDefectInfoListOrBuilderList();
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder getVideoDefectInfoListOrBuilder(
        int index);

    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> 
        getAudioDefectInfoListList();
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getAudioDefectInfoList(int index);
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    int getAudioDefectInfoListCount();
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
        getAudioDefectInfoListOrBuilderList();
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder getAudioDefectInfoListOrBuilder(
        int index);

    /**
     * <pre>
     * 视频质量分
     * </pre>
     *
     * <code>float VideoQualityScore = 3;</code>
     * @return The videoQualityScore.
     */
    float getVideoQualityScore();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.QualityEvaluationInfo}
   */
  public static final class QualityEvaluationInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.QualityEvaluationInfo)
      QualityEvaluationInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QualityEvaluationInfo.newBuilder() to construct.
    private QualityEvaluationInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QualityEvaluationInfo() {
      videoDefectInfoList_ = java.util.Collections.emptyList();
      audioDefectInfoList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QualityEvaluationInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_QualityEvaluationInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_QualityEvaluationInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.Builder.class);
    }

    public static final int VIDEODEFECTINFOLIST_FIELD_NUMBER = 1;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> videoDefectInfoList_;
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> getVideoDefectInfoListList() {
      return videoDefectInfoList_;
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
        getVideoDefectInfoListOrBuilderList() {
      return videoDefectInfoList_;
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public int getVideoDefectInfoListCount() {
      return videoDefectInfoList_.size();
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getVideoDefectInfoList(int index) {
      return videoDefectInfoList_.get(index);
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder getVideoDefectInfoListOrBuilder(
        int index) {
      return videoDefectInfoList_.get(index);
    }

    public static final int AUDIODEFECTINFOLIST_FIELD_NUMBER = 2;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> audioDefectInfoList_;
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> getAudioDefectInfoListList() {
      return audioDefectInfoList_;
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
        getAudioDefectInfoListOrBuilderList() {
      return audioDefectInfoList_;
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public int getAudioDefectInfoListCount() {
      return audioDefectInfoList_.size();
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getAudioDefectInfoList(int index) {
      return audioDefectInfoList_.get(index);
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder getAudioDefectInfoListOrBuilder(
        int index) {
      return audioDefectInfoList_.get(index);
    }

    public static final int VIDEOQUALITYSCORE_FIELD_NUMBER = 3;
    private float videoQualityScore_;
    /**
     * <pre>
     * 视频质量分
     * </pre>
     *
     * <code>float VideoQualityScore = 3;</code>
     * @return The videoQualityScore.
     */
    @java.lang.Override
    public float getVideoQualityScore() {
      return videoQualityScore_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < videoDefectInfoList_.size(); i++) {
        output.writeMessage(1, videoDefectInfoList_.get(i));
      }
      for (int i = 0; i < audioDefectInfoList_.size(); i++) {
        output.writeMessage(2, audioDefectInfoList_.get(i));
      }
      if (java.lang.Float.floatToRawIntBits(videoQualityScore_) != 0) {
        output.writeFloat(3, videoQualityScore_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < videoDefectInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, videoDefectInfoList_.get(i));
      }
      for (int i = 0; i < audioDefectInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, audioDefectInfoList_.get(i));
      }
      if (java.lang.Float.floatToRawIntBits(videoQualityScore_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, videoQualityScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo) obj;

      if (!getVideoDefectInfoListList()
          .equals(other.getVideoDefectInfoListList())) return false;
      if (!getAudioDefectInfoListList()
          .equals(other.getAudioDefectInfoListList())) return false;
      if (java.lang.Float.floatToIntBits(getVideoQualityScore())
          != java.lang.Float.floatToIntBits(
              other.getVideoQualityScore())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVideoDefectInfoListCount() > 0) {
        hash = (37 * hash) + VIDEODEFECTINFOLIST_FIELD_NUMBER;
        hash = (53 * hash) + getVideoDefectInfoListList().hashCode();
      }
      if (getAudioDefectInfoListCount() > 0) {
        hash = (37 * hash) + AUDIODEFECTINFOLIST_FIELD_NUMBER;
        hash = (53 * hash) + getAudioDefectInfoListList().hashCode();
      }
      hash = (37 * hash) + VIDEOQUALITYSCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVideoQualityScore());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.QualityEvaluationInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.QualityEvaluationInfo)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_QualityEvaluationInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_QualityEvaluationInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (videoDefectInfoListBuilder_ == null) {
          videoDefectInfoList_ = java.util.Collections.emptyList();
        } else {
          videoDefectInfoList_ = null;
          videoDefectInfoListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (audioDefectInfoListBuilder_ == null) {
          audioDefectInfoList_ = java.util.Collections.emptyList();
        } else {
          audioDefectInfoList_ = null;
          audioDefectInfoListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        videoQualityScore_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_QualityEvaluationInfo_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo(this);
        int from_bitField0_ = bitField0_;
        if (videoDefectInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            videoDefectInfoList_ = java.util.Collections.unmodifiableList(videoDefectInfoList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.videoDefectInfoList_ = videoDefectInfoList_;
        } else {
          result.videoDefectInfoList_ = videoDefectInfoListBuilder_.build();
        }
        if (audioDefectInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            audioDefectInfoList_ = java.util.Collections.unmodifiableList(audioDefectInfoList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.audioDefectInfoList_ = audioDefectInfoList_;
        } else {
          result.audioDefectInfoList_ = audioDefectInfoListBuilder_.build();
        }
        result.videoQualityScore_ = videoQualityScore_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.getDefaultInstance()) return this;
        if (videoDefectInfoListBuilder_ == null) {
          if (!other.videoDefectInfoList_.isEmpty()) {
            if (videoDefectInfoList_.isEmpty()) {
              videoDefectInfoList_ = other.videoDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVideoDefectInfoListIsMutable();
              videoDefectInfoList_.addAll(other.videoDefectInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.videoDefectInfoList_.isEmpty()) {
            if (videoDefectInfoListBuilder_.isEmpty()) {
              videoDefectInfoListBuilder_.dispose();
              videoDefectInfoListBuilder_ = null;
              videoDefectInfoList_ = other.videoDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              videoDefectInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVideoDefectInfoListFieldBuilder() : null;
            } else {
              videoDefectInfoListBuilder_.addAllMessages(other.videoDefectInfoList_);
            }
          }
        }
        if (audioDefectInfoListBuilder_ == null) {
          if (!other.audioDefectInfoList_.isEmpty()) {
            if (audioDefectInfoList_.isEmpty()) {
              audioDefectInfoList_ = other.audioDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAudioDefectInfoListIsMutable();
              audioDefectInfoList_.addAll(other.audioDefectInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.audioDefectInfoList_.isEmpty()) {
            if (audioDefectInfoListBuilder_.isEmpty()) {
              audioDefectInfoListBuilder_.dispose();
              audioDefectInfoListBuilder_ = null;
              audioDefectInfoList_ = other.audioDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              audioDefectInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAudioDefectInfoListFieldBuilder() : null;
            } else {
              audioDefectInfoListBuilder_.addAllMessages(other.audioDefectInfoList_);
            }
          }
        }
        if (other.getVideoQualityScore() != 0F) {
          setVideoQualityScore(other.getVideoQualityScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.parser(),
                        extensionRegistry);
                if (videoDefectInfoListBuilder_ == null) {
                  ensureVideoDefectInfoListIsMutable();
                  videoDefectInfoList_.add(m);
                } else {
                  videoDefectInfoListBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.parser(),
                        extensionRegistry);
                if (audioDefectInfoListBuilder_ == null) {
                  ensureAudioDefectInfoListIsMutable();
                  audioDefectInfoList_.add(m);
                } else {
                  audioDefectInfoListBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 29: {
                videoQualityScore_ = input.readFloat();

                break;
              } // case 29
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> videoDefectInfoList_ =
        java.util.Collections.emptyList();
      private void ensureVideoDefectInfoListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          videoDefectInfoList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo>(videoDefectInfoList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> videoDefectInfoListBuilder_;

      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> getVideoDefectInfoListList() {
        if (videoDefectInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(videoDefectInfoList_);
        } else {
          return videoDefectInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public int getVideoDefectInfoListCount() {
        if (videoDefectInfoListBuilder_ == null) {
          return videoDefectInfoList_.size();
        } else {
          return videoDefectInfoListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getVideoDefectInfoList(int index) {
        if (videoDefectInfoListBuilder_ == null) {
          return videoDefectInfoList_.get(index);
        } else {
          return videoDefectInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder setVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo value) {
        if (videoDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.set(index, value);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder setVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder builderForValue) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo value) {
        if (videoDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(value);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo value) {
        if (videoDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(index, value);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder builderForValue) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder builderForValue) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addAllVideoDefectInfoList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> values) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, videoDefectInfoList_);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder clearVideoDefectInfoList() {
        if (videoDefectInfoListBuilder_ == null) {
          videoDefectInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder removeVideoDefectInfoList(int index) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.remove(index);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder getVideoDefectInfoListBuilder(
          int index) {
        return getVideoDefectInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder getVideoDefectInfoListOrBuilder(
          int index) {
        if (videoDefectInfoListBuilder_ == null) {
          return videoDefectInfoList_.get(index);  } else {
          return videoDefectInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
           getVideoDefectInfoListOrBuilderList() {
        if (videoDefectInfoListBuilder_ != null) {
          return videoDefectInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(videoDefectInfoList_);
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder addVideoDefectInfoListBuilder() {
        return getVideoDefectInfoListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder addVideoDefectInfoListBuilder(
          int index) {
        return getVideoDefectInfoListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder> 
           getVideoDefectInfoListBuilderList() {
        return getVideoDefectInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
          getVideoDefectInfoListFieldBuilder() {
        if (videoDefectInfoListBuilder_ == null) {
          videoDefectInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder>(
                  videoDefectInfoList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          videoDefectInfoList_ = null;
        }
        return videoDefectInfoListBuilder_;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> audioDefectInfoList_ =
        java.util.Collections.emptyList();
      private void ensureAudioDefectInfoListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          audioDefectInfoList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo>(audioDefectInfoList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> audioDefectInfoListBuilder_;

      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> getAudioDefectInfoListList() {
        if (audioDefectInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(audioDefectInfoList_);
        } else {
          return audioDefectInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public int getAudioDefectInfoListCount() {
        if (audioDefectInfoListBuilder_ == null) {
          return audioDefectInfoList_.size();
        } else {
          return audioDefectInfoListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getAudioDefectInfoList(int index) {
        if (audioDefectInfoListBuilder_ == null) {
          return audioDefectInfoList_.get(index);
        } else {
          return audioDefectInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder setAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo value) {
        if (audioDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.set(index, value);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder setAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder builderForValue) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo value) {
        if (audioDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(value);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo value) {
        if (audioDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(index, value);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder builderForValue) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder builderForValue) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAllAudioDefectInfoList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> values) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, audioDefectInfoList_);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder clearAudioDefectInfoList() {
        if (audioDefectInfoListBuilder_ == null) {
          audioDefectInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder removeAudioDefectInfoList(int index) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.remove(index);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder getAudioDefectInfoListBuilder(
          int index) {
        return getAudioDefectInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder getAudioDefectInfoListOrBuilder(
          int index) {
        if (audioDefectInfoListBuilder_ == null) {
          return audioDefectInfoList_.get(index);  } else {
          return audioDefectInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
           getAudioDefectInfoListOrBuilderList() {
        if (audioDefectInfoListBuilder_ != null) {
          return audioDefectInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(audioDefectInfoList_);
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder addAudioDefectInfoListBuilder() {
        return getAudioDefectInfoListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder addAudioDefectInfoListBuilder(
          int index) {
        return getAudioDefectInfoListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder> 
           getAudioDefectInfoListBuilderList() {
        return getAudioDefectInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
          getAudioDefectInfoListFieldBuilder() {
        if (audioDefectInfoListBuilder_ == null) {
          audioDefectInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder>(
                  audioDefectInfoList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          audioDefectInfoList_ = null;
        }
        return audioDefectInfoListBuilder_;
      }

      private float videoQualityScore_ ;
      /**
       * <pre>
       * 视频质量分
       * </pre>
       *
       * <code>float VideoQualityScore = 3;</code>
       * @return The videoQualityScore.
       */
      @java.lang.Override
      public float getVideoQualityScore() {
        return videoQualityScore_;
      }
      /**
       * <pre>
       * 视频质量分
       * </pre>
       *
       * <code>float VideoQualityScore = 3;</code>
       * @param value The videoQualityScore to set.
       * @return This builder for chaining.
       */
      public Builder setVideoQualityScore(float value) {
        
        videoQualityScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 视频质量分
       * </pre>
       *
       * <code>float VideoQualityScore = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVideoQualityScore() {
        
        videoQualityScore_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.QualityEvaluationInfo)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.QualityEvaluationInfo)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QualityEvaluationInfo>
        PARSER = new com.google.protobuf.AbstractParser<QualityEvaluationInfo>() {
      @java.lang.Override
      public QualityEvaluationInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<QualityEvaluationInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QualityEvaluationInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LiveVideoQualityScoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.LiveVideoQualityScore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float VideoQualityScore = 1;</code>
     * @return The videoQualityScore.
     */
    float getVideoQualityScore();

    /**
     * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
     * @return Whether the videoQualityScoreTime field is set.
     */
    boolean hasVideoQualityScoreTime();
    /**
     * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
     * @return The videoQualityScoreTime.
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getVideoQualityScoreTime();
    /**
     * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getVideoQualityScoreTimeOrBuilder();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.LiveVideoQualityScore}
   */
  public static final class LiveVideoQualityScore extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.LiveVideoQualityScore)
      LiveVideoQualityScoreOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LiveVideoQualityScore.newBuilder() to construct.
    private LiveVideoQualityScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LiveVideoQualityScore() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LiveVideoQualityScore();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveVideoQualityScore_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveVideoQualityScore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder.class);
    }

    public static final int VIDEOQUALITYSCORE_FIELD_NUMBER = 1;
    private float videoQualityScore_;
    /**
     * <code>float VideoQualityScore = 1;</code>
     * @return The videoQualityScore.
     */
    @java.lang.Override
    public float getVideoQualityScore() {
      return videoQualityScore_;
    }

    public static final int VIDEOQUALITYSCORETIME_FIELD_NUMBER = 2;
    private com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo videoQualityScoreTime_;
    /**
     * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
     * @return Whether the videoQualityScoreTime field is set.
     */
    @java.lang.Override
    public boolean hasVideoQualityScoreTime() {
      return videoQualityScoreTime_ != null;
    }
    /**
     * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
     * @return The videoQualityScoreTime.
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getVideoQualityScoreTime() {
      return videoQualityScoreTime_ == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance() : videoQualityScoreTime_;
    }
    /**
     * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getVideoQualityScoreTimeOrBuilder() {
      return getVideoQualityScoreTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(videoQualityScore_) != 0) {
        output.writeFloat(1, videoQualityScore_);
      }
      if (videoQualityScoreTime_ != null) {
        output.writeMessage(2, getVideoQualityScoreTime());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(videoQualityScore_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, videoQualityScore_);
      }
      if (videoQualityScoreTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getVideoQualityScoreTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore) obj;

      if (java.lang.Float.floatToIntBits(getVideoQualityScore())
          != java.lang.Float.floatToIntBits(
              other.getVideoQualityScore())) return false;
      if (hasVideoQualityScoreTime() != other.hasVideoQualityScoreTime()) return false;
      if (hasVideoQualityScoreTime()) {
        if (!getVideoQualityScoreTime()
            .equals(other.getVideoQualityScoreTime())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VIDEOQUALITYSCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVideoQualityScore());
      if (hasVideoQualityScoreTime()) {
        hash = (37 * hash) + VIDEOQUALITYSCORETIME_FIELD_NUMBER;
        hash = (53 * hash) + getVideoQualityScoreTime().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.LiveVideoQualityScore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.LiveVideoQualityScore)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveVideoQualityScore_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveVideoQualityScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        videoQualityScore_ = 0F;

        if (videoQualityScoreTimeBuilder_ == null) {
          videoQualityScoreTime_ = null;
        } else {
          videoQualityScoreTime_ = null;
          videoQualityScoreTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveVideoQualityScore_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore(this);
        result.videoQualityScore_ = videoQualityScore_;
        if (videoQualityScoreTimeBuilder_ == null) {
          result.videoQualityScoreTime_ = videoQualityScoreTime_;
        } else {
          result.videoQualityScoreTime_ = videoQualityScoreTimeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.getDefaultInstance()) return this;
        if (other.getVideoQualityScore() != 0F) {
          setVideoQualityScore(other.getVideoQualityScore());
        }
        if (other.hasVideoQualityScoreTime()) {
          mergeVideoQualityScoreTime(other.getVideoQualityScoreTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                videoQualityScore_ = input.readFloat();

                break;
              } // case 13
              case 18: {
                input.readMessage(
                    getVideoQualityScoreTimeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private float videoQualityScore_ ;
      /**
       * <code>float VideoQualityScore = 1;</code>
       * @return The videoQualityScore.
       */
      @java.lang.Override
      public float getVideoQualityScore() {
        return videoQualityScore_;
      }
      /**
       * <code>float VideoQualityScore = 1;</code>
       * @param value The videoQualityScore to set.
       * @return This builder for chaining.
       */
      public Builder setVideoQualityScore(float value) {
        
        videoQualityScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float VideoQualityScore = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVideoQualityScore() {
        
        videoQualityScore_ = 0F;
        onChanged();
        return this;
      }

      private com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo videoQualityScoreTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> videoQualityScoreTimeBuilder_;
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       * @return Whether the videoQualityScoreTime field is set.
       */
      public boolean hasVideoQualityScoreTime() {
        return videoQualityScoreTimeBuilder_ != null || videoQualityScoreTime_ != null;
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       * @return The videoQualityScoreTime.
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo getVideoQualityScoreTime() {
        if (videoQualityScoreTimeBuilder_ == null) {
          return videoQualityScoreTime_ == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance() : videoQualityScoreTime_;
        } else {
          return videoQualityScoreTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       */
      public Builder setVideoQualityScoreTime(com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (videoQualityScoreTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          videoQualityScoreTime_ = value;
          onChanged();
        } else {
          videoQualityScoreTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       */
      public Builder setVideoQualityScoreTime(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder builderForValue) {
        if (videoQualityScoreTimeBuilder_ == null) {
          videoQualityScoreTime_ = builderForValue.build();
          onChanged();
        } else {
          videoQualityScoreTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       */
      public Builder mergeVideoQualityScoreTime(com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo value) {
        if (videoQualityScoreTimeBuilder_ == null) {
          if (videoQualityScoreTime_ != null) {
            videoQualityScoreTime_ =
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.newBuilder(videoQualityScoreTime_).mergeFrom(value).buildPartial();
          } else {
            videoQualityScoreTime_ = value;
          }
          onChanged();
        } else {
          videoQualityScoreTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       */
      public Builder clearVideoQualityScoreTime() {
        if (videoQualityScoreTimeBuilder_ == null) {
          videoQualityScoreTime_ = null;
          onChanged();
        } else {
          videoQualityScoreTime_ = null;
          videoQualityScoreTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder getVideoQualityScoreTimeBuilder() {
        
        onChanged();
        return getVideoQualityScoreTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder getVideoQualityScoreTimeOrBuilder() {
        if (videoQualityScoreTimeBuilder_ != null) {
          return videoQualityScoreTimeBuilder_.getMessageOrBuilder();
        } else {
          return videoQualityScoreTime_ == null ?
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.getDefaultInstance() : videoQualityScoreTime_;
        }
      }
      /**
       * <code>.trpc.media.videoquality.AppearTimeInfo VideoQualityScoreTime = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder> 
          getVideoQualityScoreTimeFieldBuilder() {
        if (videoQualityScoreTimeBuilder_ == null) {
          videoQualityScoreTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AppearTimeInfoOrBuilder>(
                  getVideoQualityScoreTime(),
                  getParentForChildren(),
                  isClean());
          videoQualityScoreTime_ = null;
        }
        return videoQualityScoreTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.LiveVideoQualityScore)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.LiveVideoQualityScore)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LiveVideoQualityScore>
        PARSER = new com.google.protobuf.AbstractParser<LiveVideoQualityScore>() {
      @java.lang.Override
      public LiveVideoQualityScore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LiveVideoQualityScore> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LiveVideoQualityScore> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LiveQualityEvaluationInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.LiveQualityEvaluationInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> 
        getVideoDefectInfoListList();
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getVideoDefectInfoList(int index);
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    int getVideoDefectInfoListCount();
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
        getVideoDefectInfoListOrBuilderList();
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder getVideoDefectInfoListOrBuilder(
        int index);

    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> 
        getAudioDefectInfoListList();
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getAudioDefectInfoList(int index);
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    int getAudioDefectInfoListCount();
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
        getAudioDefectInfoListOrBuilderList();
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder getAudioDefectInfoListOrBuilder(
        int index);

    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore> 
        getVideoQualityScoreListList();
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore getVideoQualityScoreList(int index);
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    int getVideoQualityScoreListCount();
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder> 
        getVideoQualityScoreListOrBuilderList();
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder getVideoQualityScoreListOrBuilder(
        int index);

    /**
     * <pre>
     * 直播流地址
     * </pre>
     *
     * <code>string LiveStreamURL = 4;</code>
     * @return The liveStreamURL.
     */
    java.lang.String getLiveStreamURL();
    /**
     * <pre>
     * 直播流地址
     * </pre>
     *
     * <code>string LiveStreamURL = 4;</code>
     * @return The bytes for liveStreamURL.
     */
    com.google.protobuf.ByteString
        getLiveStreamURLBytes();

    /**
     * <pre>
     * 当前消息的时间
     * </pre>
     *
     * <code>int64 CurrentTime = 5;</code>
     * @return The currentTime.
     */
    long getCurrentTime();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.LiveQualityEvaluationInfo}
   */
  public static final class LiveQualityEvaluationInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.LiveQualityEvaluationInfo)
      LiveQualityEvaluationInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LiveQualityEvaluationInfo.newBuilder() to construct.
    private LiveQualityEvaluationInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LiveQualityEvaluationInfo() {
      videoDefectInfoList_ = java.util.Collections.emptyList();
      audioDefectInfoList_ = java.util.Collections.emptyList();
      videoQualityScoreList_ = java.util.Collections.emptyList();
      liveStreamURL_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LiveQualityEvaluationInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.Builder.class);
    }

    public static final int VIDEODEFECTINFOLIST_FIELD_NUMBER = 1;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> videoDefectInfoList_;
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> getVideoDefectInfoListList() {
      return videoDefectInfoList_;
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
        getVideoDefectInfoListOrBuilderList() {
      return videoDefectInfoList_;
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public int getVideoDefectInfoListCount() {
      return videoDefectInfoList_.size();
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getVideoDefectInfoList(int index) {
      return videoDefectInfoList_.get(index);
    }
    /**
     * <pre>
     * 视频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder getVideoDefectInfoListOrBuilder(
        int index) {
      return videoDefectInfoList_.get(index);
    }

    public static final int AUDIODEFECTINFOLIST_FIELD_NUMBER = 2;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> audioDefectInfoList_;
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> getAudioDefectInfoListList() {
      return audioDefectInfoList_;
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
        getAudioDefectInfoListOrBuilderList() {
      return audioDefectInfoList_;
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public int getAudioDefectInfoListCount() {
      return audioDefectInfoList_.size();
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getAudioDefectInfoList(int index) {
      return audioDefectInfoList_.get(index);
    }
    /**
     * <pre>
     * 音频缺陷信息列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder getAudioDefectInfoListOrBuilder(
        int index) {
      return audioDefectInfoList_.get(index);
    }

    public static final int VIDEOQUALITYSCORELIST_FIELD_NUMBER = 3;
    private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore> videoQualityScoreList_;
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore> getVideoQualityScoreListList() {
      return videoQualityScoreList_;
    }
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder> 
        getVideoQualityScoreListOrBuilderList() {
      return videoQualityScoreList_;
    }
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    @java.lang.Override
    public int getVideoQualityScoreListCount() {
      return videoQualityScoreList_.size();
    }
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore getVideoQualityScoreList(int index) {
      return videoQualityScoreList_.get(index);
    }
    /**
     * <pre>
     * 质检分列表
     * </pre>
     *
     * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder getVideoQualityScoreListOrBuilder(
        int index) {
      return videoQualityScoreList_.get(index);
    }

    public static final int LIVESTREAMURL_FIELD_NUMBER = 4;
    private volatile java.lang.Object liveStreamURL_;
    /**
     * <pre>
     * 直播流地址
     * </pre>
     *
     * <code>string LiveStreamURL = 4;</code>
     * @return The liveStreamURL.
     */
    @java.lang.Override
    public java.lang.String getLiveStreamURL() {
      java.lang.Object ref = liveStreamURL_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        liveStreamURL_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 直播流地址
     * </pre>
     *
     * <code>string LiveStreamURL = 4;</code>
     * @return The bytes for liveStreamURL.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLiveStreamURLBytes() {
      java.lang.Object ref = liveStreamURL_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        liveStreamURL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENTTIME_FIELD_NUMBER = 5;
    private long currentTime_;
    /**
     * <pre>
     * 当前消息的时间
     * </pre>
     *
     * <code>int64 CurrentTime = 5;</code>
     * @return The currentTime.
     */
    @java.lang.Override
    public long getCurrentTime() {
      return currentTime_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < videoDefectInfoList_.size(); i++) {
        output.writeMessage(1, videoDefectInfoList_.get(i));
      }
      for (int i = 0; i < audioDefectInfoList_.size(); i++) {
        output.writeMessage(2, audioDefectInfoList_.get(i));
      }
      for (int i = 0; i < videoQualityScoreList_.size(); i++) {
        output.writeMessage(3, videoQualityScoreList_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(liveStreamURL_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, liveStreamURL_);
      }
      if (currentTime_ != 0L) {
        output.writeInt64(5, currentTime_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < videoDefectInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, videoDefectInfoList_.get(i));
      }
      for (int i = 0; i < audioDefectInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, audioDefectInfoList_.get(i));
      }
      for (int i = 0; i < videoQualityScoreList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, videoQualityScoreList_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(liveStreamURL_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, liveStreamURL_);
      }
      if (currentTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, currentTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo) obj;

      if (!getVideoDefectInfoListList()
          .equals(other.getVideoDefectInfoListList())) return false;
      if (!getAudioDefectInfoListList()
          .equals(other.getAudioDefectInfoListList())) return false;
      if (!getVideoQualityScoreListList()
          .equals(other.getVideoQualityScoreListList())) return false;
      if (!getLiveStreamURL()
          .equals(other.getLiveStreamURL())) return false;
      if (getCurrentTime()
          != other.getCurrentTime()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVideoDefectInfoListCount() > 0) {
        hash = (37 * hash) + VIDEODEFECTINFOLIST_FIELD_NUMBER;
        hash = (53 * hash) + getVideoDefectInfoListList().hashCode();
      }
      if (getAudioDefectInfoListCount() > 0) {
        hash = (37 * hash) + AUDIODEFECTINFOLIST_FIELD_NUMBER;
        hash = (53 * hash) + getAudioDefectInfoListList().hashCode();
      }
      if (getVideoQualityScoreListCount() > 0) {
        hash = (37 * hash) + VIDEOQUALITYSCORELIST_FIELD_NUMBER;
        hash = (53 * hash) + getVideoQualityScoreListList().hashCode();
      }
      hash = (37 * hash) + LIVESTREAMURL_FIELD_NUMBER;
      hash = (53 * hash) + getLiveStreamURL().hashCode();
      hash = (37 * hash) + CURRENTTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrentTime());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.LiveQualityEvaluationInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.LiveQualityEvaluationInfo)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (videoDefectInfoListBuilder_ == null) {
          videoDefectInfoList_ = java.util.Collections.emptyList();
        } else {
          videoDefectInfoList_ = null;
          videoDefectInfoListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (audioDefectInfoListBuilder_ == null) {
          audioDefectInfoList_ = java.util.Collections.emptyList();
        } else {
          audioDefectInfoList_ = null;
          audioDefectInfoListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (videoQualityScoreListBuilder_ == null) {
          videoQualityScoreList_ = java.util.Collections.emptyList();
        } else {
          videoQualityScoreList_ = null;
          videoQualityScoreListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        liveStreamURL_ = "";

        currentTime_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo(this);
        int from_bitField0_ = bitField0_;
        if (videoDefectInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            videoDefectInfoList_ = java.util.Collections.unmodifiableList(videoDefectInfoList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.videoDefectInfoList_ = videoDefectInfoList_;
        } else {
          result.videoDefectInfoList_ = videoDefectInfoListBuilder_.build();
        }
        if (audioDefectInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            audioDefectInfoList_ = java.util.Collections.unmodifiableList(audioDefectInfoList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.audioDefectInfoList_ = audioDefectInfoList_;
        } else {
          result.audioDefectInfoList_ = audioDefectInfoListBuilder_.build();
        }
        if (videoQualityScoreListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            videoQualityScoreList_ = java.util.Collections.unmodifiableList(videoQualityScoreList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.videoQualityScoreList_ = videoQualityScoreList_;
        } else {
          result.videoQualityScoreList_ = videoQualityScoreListBuilder_.build();
        }
        result.liveStreamURL_ = liveStreamURL_;
        result.currentTime_ = currentTime_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.getDefaultInstance()) return this;
        if (videoDefectInfoListBuilder_ == null) {
          if (!other.videoDefectInfoList_.isEmpty()) {
            if (videoDefectInfoList_.isEmpty()) {
              videoDefectInfoList_ = other.videoDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVideoDefectInfoListIsMutable();
              videoDefectInfoList_.addAll(other.videoDefectInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.videoDefectInfoList_.isEmpty()) {
            if (videoDefectInfoListBuilder_.isEmpty()) {
              videoDefectInfoListBuilder_.dispose();
              videoDefectInfoListBuilder_ = null;
              videoDefectInfoList_ = other.videoDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              videoDefectInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVideoDefectInfoListFieldBuilder() : null;
            } else {
              videoDefectInfoListBuilder_.addAllMessages(other.videoDefectInfoList_);
            }
          }
        }
        if (audioDefectInfoListBuilder_ == null) {
          if (!other.audioDefectInfoList_.isEmpty()) {
            if (audioDefectInfoList_.isEmpty()) {
              audioDefectInfoList_ = other.audioDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAudioDefectInfoListIsMutable();
              audioDefectInfoList_.addAll(other.audioDefectInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.audioDefectInfoList_.isEmpty()) {
            if (audioDefectInfoListBuilder_.isEmpty()) {
              audioDefectInfoListBuilder_.dispose();
              audioDefectInfoListBuilder_ = null;
              audioDefectInfoList_ = other.audioDefectInfoList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              audioDefectInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAudioDefectInfoListFieldBuilder() : null;
            } else {
              audioDefectInfoListBuilder_.addAllMessages(other.audioDefectInfoList_);
            }
          }
        }
        if (videoQualityScoreListBuilder_ == null) {
          if (!other.videoQualityScoreList_.isEmpty()) {
            if (videoQualityScoreList_.isEmpty()) {
              videoQualityScoreList_ = other.videoQualityScoreList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureVideoQualityScoreListIsMutable();
              videoQualityScoreList_.addAll(other.videoQualityScoreList_);
            }
            onChanged();
          }
        } else {
          if (!other.videoQualityScoreList_.isEmpty()) {
            if (videoQualityScoreListBuilder_.isEmpty()) {
              videoQualityScoreListBuilder_.dispose();
              videoQualityScoreListBuilder_ = null;
              videoQualityScoreList_ = other.videoQualityScoreList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              videoQualityScoreListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVideoQualityScoreListFieldBuilder() : null;
            } else {
              videoQualityScoreListBuilder_.addAllMessages(other.videoQualityScoreList_);
            }
          }
        }
        if (!other.getLiveStreamURL().isEmpty()) {
          liveStreamURL_ = other.liveStreamURL_;
          onChanged();
        }
        if (other.getCurrentTime() != 0L) {
          setCurrentTime(other.getCurrentTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.parser(),
                        extensionRegistry);
                if (videoDefectInfoListBuilder_ == null) {
                  ensureVideoDefectInfoListIsMutable();
                  videoDefectInfoList_.add(m);
                } else {
                  videoDefectInfoListBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.parser(),
                        extensionRegistry);
                if (audioDefectInfoListBuilder_ == null) {
                  ensureAudioDefectInfoListIsMutable();
                  audioDefectInfoList_.add(m);
                } else {
                  audioDefectInfoListBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore m =
                    input.readMessage(
                        com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.parser(),
                        extensionRegistry);
                if (videoQualityScoreListBuilder_ == null) {
                  ensureVideoQualityScoreListIsMutable();
                  videoQualityScoreList_.add(m);
                } else {
                  videoQualityScoreListBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                liveStreamURL_ = input.readStringRequireUtf8();

                break;
              } // case 34
              case 40: {
                currentTime_ = input.readInt64();

                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> videoDefectInfoList_ =
        java.util.Collections.emptyList();
      private void ensureVideoDefectInfoListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          videoDefectInfoList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo>(videoDefectInfoList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> videoDefectInfoListBuilder_;

      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> getVideoDefectInfoListList() {
        if (videoDefectInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(videoDefectInfoList_);
        } else {
          return videoDefectInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public int getVideoDefectInfoListCount() {
        if (videoDefectInfoListBuilder_ == null) {
          return videoDefectInfoList_.size();
        } else {
          return videoDefectInfoListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo getVideoDefectInfoList(int index) {
        if (videoDefectInfoListBuilder_ == null) {
          return videoDefectInfoList_.get(index);
        } else {
          return videoDefectInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder setVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo value) {
        if (videoDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.set(index, value);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder setVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder builderForValue) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo value) {
        if (videoDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(value);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo value) {
        if (videoDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(index, value);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder builderForValue) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addVideoDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder builderForValue) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder addAllVideoDefectInfoList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo> values) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, videoDefectInfoList_);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder clearVideoDefectInfoList() {
        if (videoDefectInfoListBuilder_ == null) {
          videoDefectInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public Builder removeVideoDefectInfoList(int index) {
        if (videoDefectInfoListBuilder_ == null) {
          ensureVideoDefectInfoListIsMutable();
          videoDefectInfoList_.remove(index);
          onChanged();
        } else {
          videoDefectInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder getVideoDefectInfoListBuilder(
          int index) {
        return getVideoDefectInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder getVideoDefectInfoListOrBuilder(
          int index) {
        if (videoDefectInfoListBuilder_ == null) {
          return videoDefectInfoList_.get(index);  } else {
          return videoDefectInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
           getVideoDefectInfoListOrBuilderList() {
        if (videoDefectInfoListBuilder_ != null) {
          return videoDefectInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(videoDefectInfoList_);
        }
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder addVideoDefectInfoListBuilder() {
        return getVideoDefectInfoListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder addVideoDefectInfoListBuilder(
          int index) {
        return getVideoDefectInfoListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 视频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.VideoDefectInfo VideoDefectInfoList = 1;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder> 
           getVideoDefectInfoListBuilderList() {
        return getVideoDefectInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder> 
          getVideoDefectInfoListFieldBuilder() {
        if (videoDefectInfoListBuilder_ == null) {
          videoDefectInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.VideoDefectInfoOrBuilder>(
                  videoDefectInfoList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          videoDefectInfoList_ = null;
        }
        return videoDefectInfoListBuilder_;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> audioDefectInfoList_ =
        java.util.Collections.emptyList();
      private void ensureAudioDefectInfoListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          audioDefectInfoList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo>(audioDefectInfoList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> audioDefectInfoListBuilder_;

      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> getAudioDefectInfoListList() {
        if (audioDefectInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(audioDefectInfoList_);
        } else {
          return audioDefectInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public int getAudioDefectInfoListCount() {
        if (audioDefectInfoListBuilder_ == null) {
          return audioDefectInfoList_.size();
        } else {
          return audioDefectInfoListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo getAudioDefectInfoList(int index) {
        if (audioDefectInfoListBuilder_ == null) {
          return audioDefectInfoList_.get(index);
        } else {
          return audioDefectInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder setAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo value) {
        if (audioDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.set(index, value);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder setAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder builderForValue) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo value) {
        if (audioDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(value);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo value) {
        if (audioDefectInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(index, value);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder builderForValue) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAudioDefectInfoList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder builderForValue) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder addAllAudioDefectInfoList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo> values) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, audioDefectInfoList_);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder clearAudioDefectInfoList() {
        if (audioDefectInfoListBuilder_ == null) {
          audioDefectInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public Builder removeAudioDefectInfoList(int index) {
        if (audioDefectInfoListBuilder_ == null) {
          ensureAudioDefectInfoListIsMutable();
          audioDefectInfoList_.remove(index);
          onChanged();
        } else {
          audioDefectInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder getAudioDefectInfoListBuilder(
          int index) {
        return getAudioDefectInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder getAudioDefectInfoListOrBuilder(
          int index) {
        if (audioDefectInfoListBuilder_ == null) {
          return audioDefectInfoList_.get(index);  } else {
          return audioDefectInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
           getAudioDefectInfoListOrBuilderList() {
        if (audioDefectInfoListBuilder_ != null) {
          return audioDefectInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(audioDefectInfoList_);
        }
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder addAudioDefectInfoListBuilder() {
        return getAudioDefectInfoListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder addAudioDefectInfoListBuilder(
          int index) {
        return getAudioDefectInfoListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 音频缺陷信息列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.AudioDefectInfo AudioDefectInfoList = 2;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder> 
           getAudioDefectInfoListBuilderList() {
        return getAudioDefectInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder> 
          getAudioDefectInfoListFieldBuilder() {
        if (audioDefectInfoListBuilder_ == null) {
          audioDefectInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.AudioDefectInfoOrBuilder>(
                  audioDefectInfoList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          audioDefectInfoList_ = null;
        }
        return audioDefectInfoListBuilder_;
      }

      private java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore> videoQualityScoreList_ =
        java.util.Collections.emptyList();
      private void ensureVideoQualityScoreListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          videoQualityScoreList_ = new java.util.ArrayList<com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore>(videoQualityScoreList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder> videoQualityScoreListBuilder_;

      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore> getVideoQualityScoreListList() {
        if (videoQualityScoreListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(videoQualityScoreList_);
        } else {
          return videoQualityScoreListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public int getVideoQualityScoreListCount() {
        if (videoQualityScoreListBuilder_ == null) {
          return videoQualityScoreList_.size();
        } else {
          return videoQualityScoreListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore getVideoQualityScoreList(int index) {
        if (videoQualityScoreListBuilder_ == null) {
          return videoQualityScoreList_.get(index);
        } else {
          return videoQualityScoreListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder setVideoQualityScoreList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore value) {
        if (videoQualityScoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoQualityScoreListIsMutable();
          videoQualityScoreList_.set(index, value);
          onChanged();
        } else {
          videoQualityScoreListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder setVideoQualityScoreList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder builderForValue) {
        if (videoQualityScoreListBuilder_ == null) {
          ensureVideoQualityScoreListIsMutable();
          videoQualityScoreList_.set(index, builderForValue.build());
          onChanged();
        } else {
          videoQualityScoreListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder addVideoQualityScoreList(com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore value) {
        if (videoQualityScoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoQualityScoreListIsMutable();
          videoQualityScoreList_.add(value);
          onChanged();
        } else {
          videoQualityScoreListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder addVideoQualityScoreList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore value) {
        if (videoQualityScoreListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVideoQualityScoreListIsMutable();
          videoQualityScoreList_.add(index, value);
          onChanged();
        } else {
          videoQualityScoreListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder addVideoQualityScoreList(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder builderForValue) {
        if (videoQualityScoreListBuilder_ == null) {
          ensureVideoQualityScoreListIsMutable();
          videoQualityScoreList_.add(builderForValue.build());
          onChanged();
        } else {
          videoQualityScoreListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder addVideoQualityScoreList(
          int index, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder builderForValue) {
        if (videoQualityScoreListBuilder_ == null) {
          ensureVideoQualityScoreListIsMutable();
          videoQualityScoreList_.add(index, builderForValue.build());
          onChanged();
        } else {
          videoQualityScoreListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder addAllVideoQualityScoreList(
          java.lang.Iterable<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore> values) {
        if (videoQualityScoreListBuilder_ == null) {
          ensureVideoQualityScoreListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, videoQualityScoreList_);
          onChanged();
        } else {
          videoQualityScoreListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder clearVideoQualityScoreList() {
        if (videoQualityScoreListBuilder_ == null) {
          videoQualityScoreList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          videoQualityScoreListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public Builder removeVideoQualityScoreList(int index) {
        if (videoQualityScoreListBuilder_ == null) {
          ensureVideoQualityScoreListIsMutable();
          videoQualityScoreList_.remove(index);
          onChanged();
        } else {
          videoQualityScoreListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder getVideoQualityScoreListBuilder(
          int index) {
        return getVideoQualityScoreListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder getVideoQualityScoreListOrBuilder(
          int index) {
        if (videoQualityScoreListBuilder_ == null) {
          return videoQualityScoreList_.get(index);  } else {
          return videoQualityScoreListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public java.util.List<? extends com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder> 
           getVideoQualityScoreListOrBuilderList() {
        if (videoQualityScoreListBuilder_ != null) {
          return videoQualityScoreListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(videoQualityScoreList_);
        }
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder addVideoQualityScoreListBuilder() {
        return getVideoQualityScoreListFieldBuilder().addBuilder(
            com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.getDefaultInstance());
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder addVideoQualityScoreListBuilder(
          int index) {
        return getVideoQualityScoreListFieldBuilder().addBuilder(
            index, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.getDefaultInstance());
      }
      /**
       * <pre>
       * 质检分列表
       * </pre>
       *
       * <code>repeated .trpc.media.videoquality.LiveVideoQualityScore VideoQualityScoreList = 3;</code>
       */
      public java.util.List<com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder> 
           getVideoQualityScoreListBuilderList() {
        return getVideoQualityScoreListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder> 
          getVideoQualityScoreListFieldBuilder() {
        if (videoQualityScoreListBuilder_ == null) {
          videoQualityScoreListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScore.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveVideoQualityScoreOrBuilder>(
                  videoQualityScoreList_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          videoQualityScoreList_ = null;
        }
        return videoQualityScoreListBuilder_;
      }

      private java.lang.Object liveStreamURL_ = "";
      /**
       * <pre>
       * 直播流地址
       * </pre>
       *
       * <code>string LiveStreamURL = 4;</code>
       * @return The liveStreamURL.
       */
      public java.lang.String getLiveStreamURL() {
        java.lang.Object ref = liveStreamURL_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          liveStreamURL_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 直播流地址
       * </pre>
       *
       * <code>string LiveStreamURL = 4;</code>
       * @return The bytes for liveStreamURL.
       */
      public com.google.protobuf.ByteString
          getLiveStreamURLBytes() {
        java.lang.Object ref = liveStreamURL_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          liveStreamURL_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 直播流地址
       * </pre>
       *
       * <code>string LiveStreamURL = 4;</code>
       * @param value The liveStreamURL to set.
       * @return This builder for chaining.
       */
      public Builder setLiveStreamURL(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        liveStreamURL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 直播流地址
       * </pre>
       *
       * <code>string LiveStreamURL = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLiveStreamURL() {
        
        liveStreamURL_ = getDefaultInstance().getLiveStreamURL();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 直播流地址
       * </pre>
       *
       * <code>string LiveStreamURL = 4;</code>
       * @param value The bytes for liveStreamURL to set.
       * @return This builder for chaining.
       */
      public Builder setLiveStreamURLBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        liveStreamURL_ = value;
        onChanged();
        return this;
      }

      private long currentTime_ ;
      /**
       * <pre>
       * 当前消息的时间
       * </pre>
       *
       * <code>int64 CurrentTime = 5;</code>
       * @return The currentTime.
       */
      @java.lang.Override
      public long getCurrentTime() {
        return currentTime_;
      }
      /**
       * <pre>
       * 当前消息的时间
       * </pre>
       *
       * <code>int64 CurrentTime = 5;</code>
       * @param value The currentTime to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTime(long value) {
        
        currentTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前消息的时间
       * </pre>
       *
       * <code>int64 CurrentTime = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTime() {
        
        currentTime_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.LiveQualityEvaluationInfo)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.LiveQualityEvaluationInfo)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LiveQualityEvaluationInfo>
        PARSER = new com.google.protobuf.AbstractParser<LiveQualityEvaluationInfo>() {
      @java.lang.Override
      public LiveQualityEvaluationInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LiveQualityEvaluationInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LiveQualityEvaluationInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescribeVideoQualityEvaluationTaskDataResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return Whether the taskInfo field is set.
     */
    boolean hasTaskInfo();
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return The taskInfo.
     */
    com.tencent.aimedia.CommonProtocol.TaskInfo getTaskInfo();
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     */
    com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder getTaskInfoOrBuilder();

    /**
     * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
     * @return Whether the taskData field is set.
     */
    boolean hasTaskData();
    /**
     * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
     * @return The taskData.
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo getTaskData();
    /**
     * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfoOrBuilder getTaskDataOrBuilder();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataResponse}
   */
  public static final class DescribeVideoQualityEvaluationTaskDataResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataResponse)
      DescribeVideoQualityEvaluationTaskDataResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DescribeVideoQualityEvaluationTaskDataResponse.newBuilder() to construct.
    private DescribeVideoQualityEvaluationTaskDataResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DescribeVideoQualityEvaluationTaskDataResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DescribeVideoQualityEvaluationTaskDataResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse.Builder.class);
    }

    public static final int TASKINFO_FIELD_NUMBER = 2;
    private com.tencent.aimedia.CommonProtocol.TaskInfo taskInfo_;
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return Whether the taskInfo field is set.
     */
    @java.lang.Override
    public boolean hasTaskInfo() {
      return taskInfo_ != null;
    }
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return The taskInfo.
     */
    @java.lang.Override
    public com.tencent.aimedia.CommonProtocol.TaskInfo getTaskInfo() {
      return taskInfo_ == null ? com.tencent.aimedia.CommonProtocol.TaskInfo.getDefaultInstance() : taskInfo_;
    }
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder getTaskInfoOrBuilder() {
      return getTaskInfo();
    }

    public static final int TASKDATA_FIELD_NUMBER = 4;
    private com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo taskData_;
    /**
     * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
     * @return Whether the taskData field is set.
     */
    @java.lang.Override
    public boolean hasTaskData() {
      return taskData_ != null;
    }
    /**
     * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
     * @return The taskData.
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo getTaskData() {
      return taskData_ == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.getDefaultInstance() : taskData_;
    }
    /**
     * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfoOrBuilder getTaskDataOrBuilder() {
      return getTaskData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (taskInfo_ != null) {
        output.writeMessage(2, getTaskInfo());
      }
      if (taskData_ != null) {
        output.writeMessage(4, getTaskData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (taskInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTaskInfo());
      }
      if (taskData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTaskData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse) obj;

      if (hasTaskInfo() != other.hasTaskInfo()) return false;
      if (hasTaskInfo()) {
        if (!getTaskInfo()
            .equals(other.getTaskInfo())) return false;
      }
      if (hasTaskData() != other.hasTaskData()) return false;
      if (hasTaskData()) {
        if (!getTaskData()
            .equals(other.getTaskData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTaskInfo()) {
        hash = (37 * hash) + TASKINFO_FIELD_NUMBER;
        hash = (53 * hash) + getTaskInfo().hashCode();
      }
      if (hasTaskData()) {
        hash = (37 * hash) + TASKDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTaskData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataResponse)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (taskInfoBuilder_ == null) {
          taskInfo_ = null;
        } else {
          taskInfo_ = null;
          taskInfoBuilder_ = null;
        }
        if (taskDataBuilder_ == null) {
          taskData_ = null;
        } else {
          taskData_ = null;
          taskDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse(this);
        if (taskInfoBuilder_ == null) {
          result.taskInfo_ = taskInfo_;
        } else {
          result.taskInfo_ = taskInfoBuilder_.build();
        }
        if (taskDataBuilder_ == null) {
          result.taskData_ = taskData_;
        } else {
          result.taskData_ = taskDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse.getDefaultInstance()) return this;
        if (other.hasTaskInfo()) {
          mergeTaskInfo(other.getTaskInfo());
        }
        if (other.hasTaskData()) {
          mergeTaskData(other.getTaskData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                input.readMessage(
                    getTaskInfoFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              case 34: {
                input.readMessage(
                    getTaskDataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private com.tencent.aimedia.CommonProtocol.TaskInfo taskInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.CommonProtocol.TaskInfo, com.tencent.aimedia.CommonProtocol.TaskInfo.Builder, com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder> taskInfoBuilder_;
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       * @return Whether the taskInfo field is set.
       */
      public boolean hasTaskInfo() {
        return taskInfoBuilder_ != null || taskInfo_ != null;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       * @return The taskInfo.
       */
      public com.tencent.aimedia.CommonProtocol.TaskInfo getTaskInfo() {
        if (taskInfoBuilder_ == null) {
          return taskInfo_ == null ? com.tencent.aimedia.CommonProtocol.TaskInfo.getDefaultInstance() : taskInfo_;
        } else {
          return taskInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder setTaskInfo(com.tencent.aimedia.CommonProtocol.TaskInfo value) {
        if (taskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskInfo_ = value;
          onChanged();
        } else {
          taskInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder setTaskInfo(
          com.tencent.aimedia.CommonProtocol.TaskInfo.Builder builderForValue) {
        if (taskInfoBuilder_ == null) {
          taskInfo_ = builderForValue.build();
          onChanged();
        } else {
          taskInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder mergeTaskInfo(com.tencent.aimedia.CommonProtocol.TaskInfo value) {
        if (taskInfoBuilder_ == null) {
          if (taskInfo_ != null) {
            taskInfo_ =
              com.tencent.aimedia.CommonProtocol.TaskInfo.newBuilder(taskInfo_).mergeFrom(value).buildPartial();
          } else {
            taskInfo_ = value;
          }
          onChanged();
        } else {
          taskInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder clearTaskInfo() {
        if (taskInfoBuilder_ == null) {
          taskInfo_ = null;
          onChanged();
        } else {
          taskInfo_ = null;
          taskInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public com.tencent.aimedia.CommonProtocol.TaskInfo.Builder getTaskInfoBuilder() {
        
        onChanged();
        return getTaskInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder getTaskInfoOrBuilder() {
        if (taskInfoBuilder_ != null) {
          return taskInfoBuilder_.getMessageOrBuilder();
        } else {
          return taskInfo_ == null ?
              com.tencent.aimedia.CommonProtocol.TaskInfo.getDefaultInstance() : taskInfo_;
        }
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.CommonProtocol.TaskInfo, com.tencent.aimedia.CommonProtocol.TaskInfo.Builder, com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder> 
          getTaskInfoFieldBuilder() {
        if (taskInfoBuilder_ == null) {
          taskInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tencent.aimedia.CommonProtocol.TaskInfo, com.tencent.aimedia.CommonProtocol.TaskInfo.Builder, com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder>(
                  getTaskInfo(),
                  getParentForChildren(),
                  isClean());
          taskInfo_ = null;
        }
        return taskInfoBuilder_;
      }

      private com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo taskData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfoOrBuilder> taskDataBuilder_;
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       * @return Whether the taskData field is set.
       */
      public boolean hasTaskData() {
        return taskDataBuilder_ != null || taskData_ != null;
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       * @return The taskData.
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo getTaskData() {
        if (taskDataBuilder_ == null) {
          return taskData_ == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.getDefaultInstance() : taskData_;
        } else {
          return taskDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder setTaskData(com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo value) {
        if (taskDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskData_ = value;
          onChanged();
        } else {
          taskDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder setTaskData(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.Builder builderForValue) {
        if (taskDataBuilder_ == null) {
          taskData_ = builderForValue.build();
          onChanged();
        } else {
          taskDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder mergeTaskData(com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo value) {
        if (taskDataBuilder_ == null) {
          if (taskData_ != null) {
            taskData_ =
              com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.newBuilder(taskData_).mergeFrom(value).buildPartial();
          } else {
            taskData_ = value;
          }
          onChanged();
        } else {
          taskDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder clearTaskData() {
        if (taskDataBuilder_ == null) {
          taskData_ = null;
          onChanged();
        } else {
          taskData_ = null;
          taskDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.Builder getTaskDataBuilder() {
        
        onChanged();
        return getTaskDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfoOrBuilder getTaskDataOrBuilder() {
        if (taskDataBuilder_ != null) {
          return taskDataBuilder_.getMessageOrBuilder();
        } else {
          return taskData_ == null ?
              com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.getDefaultInstance() : taskData_;
        }
      }
      /**
       * <code>.trpc.media.videoquality.QualityEvaluationInfo TaskData = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfoOrBuilder> 
          getTaskDataFieldBuilder() {
        if (taskDataBuilder_ == null) {
          taskDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.QualityEvaluationInfoOrBuilder>(
                  getTaskData(),
                  getParentForChildren(),
                  isClean());
          taskData_ = null;
        }
        return taskDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataResponse)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.DescribeVideoQualityEvaluationTaskDataResponse)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DescribeVideoQualityEvaluationTaskDataResponse>
        PARSER = new com.google.protobuf.AbstractParser<DescribeVideoQualityEvaluationTaskDataResponse>() {
      @java.lang.Override
      public DescribeVideoQualityEvaluationTaskDataResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DescribeVideoQualityEvaluationTaskDataResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DescribeVideoQualityEvaluationTaskDataResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeVideoQualityEvaluationTaskDataResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescribeLiveVideoQualityEvaluationTaskDataResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.media.videoquality.DescribeLiveVideoQualityEvaluationTaskDataResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return Whether the taskInfo field is set.
     */
    boolean hasTaskInfo();
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return The taskInfo.
     */
    com.tencent.aimedia.CommonProtocol.TaskInfo getTaskInfo();
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     */
    com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder getTaskInfoOrBuilder();

    /**
     * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
     * @return Whether the taskData field is set.
     */
    boolean hasTaskData();
    /**
     * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
     * @return The taskData.
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo getTaskData();
    /**
     * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
     */
    com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfoOrBuilder getTaskDataOrBuilder();
  }
  /**
   * Protobuf type {@code trpc.media.videoquality.DescribeLiveVideoQualityEvaluationTaskDataResponse}
   */
  public static final class DescribeLiveVideoQualityEvaluationTaskDataResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.media.videoquality.DescribeLiveVideoQualityEvaluationTaskDataResponse)
      DescribeLiveVideoQualityEvaluationTaskDataResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DescribeLiveVideoQualityEvaluationTaskDataResponse.newBuilder() to construct.
    private DescribeLiveVideoQualityEvaluationTaskDataResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DescribeLiveVideoQualityEvaluationTaskDataResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DescribeLiveVideoQualityEvaluationTaskDataResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse.Builder.class);
    }

    public static final int TASKINFO_FIELD_NUMBER = 2;
    private com.tencent.aimedia.CommonProtocol.TaskInfo taskInfo_;
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return Whether the taskInfo field is set.
     */
    @java.lang.Override
    public boolean hasTaskInfo() {
      return taskInfo_ != null;
    }
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     * @return The taskInfo.
     */
    @java.lang.Override
    public com.tencent.aimedia.CommonProtocol.TaskInfo getTaskInfo() {
      return taskInfo_ == null ? com.tencent.aimedia.CommonProtocol.TaskInfo.getDefaultInstance() : taskInfo_;
    }
    /**
     * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder getTaskInfoOrBuilder() {
      return getTaskInfo();
    }

    public static final int TASKDATA_FIELD_NUMBER = 4;
    private com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo taskData_;
    /**
     * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
     * @return Whether the taskData field is set.
     */
    @java.lang.Override
    public boolean hasTaskData() {
      return taskData_ != null;
    }
    /**
     * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
     * @return The taskData.
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo getTaskData() {
      return taskData_ == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.getDefaultInstance() : taskData_;
    }
    /**
     * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
     */
    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfoOrBuilder getTaskDataOrBuilder() {
      return getTaskData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (taskInfo_ != null) {
        output.writeMessage(2, getTaskInfo());
      }
      if (taskData_ != null) {
        output.writeMessage(4, getTaskData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (taskInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTaskInfo());
      }
      if (taskData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTaskData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse)) {
        return super.equals(obj);
      }
      com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse other = (com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse) obj;

      if (hasTaskInfo() != other.hasTaskInfo()) return false;
      if (hasTaskInfo()) {
        if (!getTaskInfo()
            .equals(other.getTaskInfo())) return false;
      }
      if (hasTaskData() != other.hasTaskData()) return false;
      if (hasTaskData()) {
        if (!getTaskData()
            .equals(other.getTaskData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTaskInfo()) {
        hash = (37 * hash) + TASKINFO_FIELD_NUMBER;
        hash = (53 * hash) + getTaskInfo().hashCode();
      }
      if (hasTaskData()) {
        hash = (37 * hash) + TASKDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTaskData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code trpc.media.videoquality.DescribeLiveVideoQualityEvaluationTaskDataResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.media.videoquality.DescribeLiveVideoQualityEvaluationTaskDataResponse)
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse.class, com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse.Builder.class);
      }

      // Construct using com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (taskInfoBuilder_ == null) {
          taskInfo_ = null;
        } else {
          taskInfo_ = null;
          taskInfoBuilder_ = null;
        }
        if (taskDataBuilder_ == null) {
          taskData_ = null;
        } else {
          taskData_ = null;
          taskDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_descriptor;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse getDefaultInstanceForType() {
        return com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse build() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse buildPartial() {
        com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse result = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse(this);
        if (taskInfoBuilder_ == null) {
          result.taskInfo_ = taskInfo_;
        } else {
          result.taskInfo_ = taskInfoBuilder_.build();
        }
        if (taskDataBuilder_ == null) {
          result.taskData_ = taskData_;
        } else {
          result.taskData_ = taskDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse) {
          return mergeFrom((com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse other) {
        if (other == com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse.getDefaultInstance()) return this;
        if (other.hasTaskInfo()) {
          mergeTaskInfo(other.getTaskInfo());
        }
        if (other.hasTaskData()) {
          mergeTaskData(other.getTaskData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                input.readMessage(
                    getTaskInfoFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              case 34: {
                input.readMessage(
                    getTaskDataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private com.tencent.aimedia.CommonProtocol.TaskInfo taskInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.CommonProtocol.TaskInfo, com.tencent.aimedia.CommonProtocol.TaskInfo.Builder, com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder> taskInfoBuilder_;
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       * @return Whether the taskInfo field is set.
       */
      public boolean hasTaskInfo() {
        return taskInfoBuilder_ != null || taskInfo_ != null;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       * @return The taskInfo.
       */
      public com.tencent.aimedia.CommonProtocol.TaskInfo getTaskInfo() {
        if (taskInfoBuilder_ == null) {
          return taskInfo_ == null ? com.tencent.aimedia.CommonProtocol.TaskInfo.getDefaultInstance() : taskInfo_;
        } else {
          return taskInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder setTaskInfo(com.tencent.aimedia.CommonProtocol.TaskInfo value) {
        if (taskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskInfo_ = value;
          onChanged();
        } else {
          taskInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder setTaskInfo(
          com.tencent.aimedia.CommonProtocol.TaskInfo.Builder builderForValue) {
        if (taskInfoBuilder_ == null) {
          taskInfo_ = builderForValue.build();
          onChanged();
        } else {
          taskInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder mergeTaskInfo(com.tencent.aimedia.CommonProtocol.TaskInfo value) {
        if (taskInfoBuilder_ == null) {
          if (taskInfo_ != null) {
            taskInfo_ =
              com.tencent.aimedia.CommonProtocol.TaskInfo.newBuilder(taskInfo_).mergeFrom(value).buildPartial();
          } else {
            taskInfo_ = value;
          }
          onChanged();
        } else {
          taskInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public Builder clearTaskInfo() {
        if (taskInfoBuilder_ == null) {
          taskInfo_ = null;
          onChanged();
        } else {
          taskInfo_ = null;
          taskInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public com.tencent.aimedia.CommonProtocol.TaskInfo.Builder getTaskInfoBuilder() {
        
        onChanged();
        return getTaskInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      public com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder getTaskInfoOrBuilder() {
        if (taskInfoBuilder_ != null) {
          return taskInfoBuilder_.getMessageOrBuilder();
        } else {
          return taskInfo_ == null ?
              com.tencent.aimedia.CommonProtocol.TaskInfo.getDefaultInstance() : taskInfo_;
        }
      }
      /**
       * <code>.trpc.media.common.TaskInfo TaskInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.CommonProtocol.TaskInfo, com.tencent.aimedia.CommonProtocol.TaskInfo.Builder, com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder> 
          getTaskInfoFieldBuilder() {
        if (taskInfoBuilder_ == null) {
          taskInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tencent.aimedia.CommonProtocol.TaskInfo, com.tencent.aimedia.CommonProtocol.TaskInfo.Builder, com.tencent.aimedia.CommonProtocol.TaskInfoOrBuilder>(
                  getTaskInfo(),
                  getParentForChildren(),
                  isClean());
          taskInfo_ = null;
        }
        return taskInfoBuilder_;
      }

      private com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo taskData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfoOrBuilder> taskDataBuilder_;
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       * @return Whether the taskData field is set.
       */
      public boolean hasTaskData() {
        return taskDataBuilder_ != null || taskData_ != null;
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       * @return The taskData.
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo getTaskData() {
        if (taskDataBuilder_ == null) {
          return taskData_ == null ? com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.getDefaultInstance() : taskData_;
        } else {
          return taskDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder setTaskData(com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo value) {
        if (taskDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskData_ = value;
          onChanged();
        } else {
          taskDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder setTaskData(
          com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.Builder builderForValue) {
        if (taskDataBuilder_ == null) {
          taskData_ = builderForValue.build();
          onChanged();
        } else {
          taskDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder mergeTaskData(com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo value) {
        if (taskDataBuilder_ == null) {
          if (taskData_ != null) {
            taskData_ =
              com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.newBuilder(taskData_).mergeFrom(value).buildPartial();
          } else {
            taskData_ = value;
          }
          onChanged();
        } else {
          taskDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       */
      public Builder clearTaskData() {
        if (taskDataBuilder_ == null) {
          taskData_ = null;
          onChanged();
        } else {
          taskData_ = null;
          taskDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.Builder getTaskDataBuilder() {
        
        onChanged();
        return getTaskDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       */
      public com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfoOrBuilder getTaskDataOrBuilder() {
        if (taskDataBuilder_ != null) {
          return taskDataBuilder_.getMessageOrBuilder();
        } else {
          return taskData_ == null ?
              com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.getDefaultInstance() : taskData_;
        }
      }
      /**
       * <code>.trpc.media.videoquality.LiveQualityEvaluationInfo TaskData = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfoOrBuilder> 
          getTaskDataFieldBuilder() {
        if (taskDataBuilder_ == null) {
          taskDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfo.Builder, com.tencent.aimedia.VideoQualityEvaluationProtocol.LiveQualityEvaluationInfoOrBuilder>(
                  getTaskData(),
                  getParentForChildren(),
                  isClean());
          taskData_ = null;
        }
        return taskDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.media.videoquality.DescribeLiveVideoQualityEvaluationTaskDataResponse)
    }

    // @@protoc_insertion_point(class_scope:trpc.media.videoquality.DescribeLiveVideoQualityEvaluationTaskDataResponse)
    private static final com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse();
    }

    public static com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DescribeLiveVideoQualityEvaluationTaskDataResponse>
        PARSER = new com.google.protobuf.AbstractParser<DescribeLiveVideoQualityEvaluationTaskDataResponse>() {
      @java.lang.Override
      public DescribeLiveVideoQualityEvaluationTaskDataResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DescribeLiveVideoQualityEvaluationTaskDataResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DescribeLiveVideoQualityEvaluationTaskDataResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.aimedia.VideoQualityEvaluationProtocol.DescribeLiveVideoQualityEvaluationTaskDataResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_VideoDefectLimit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_VideoDefectLimit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_AudioDefectLimit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_AudioDefectLimit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_AppearTimeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_AppearTimeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_VideoDefectInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_VideoDefectInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_AudioDefectInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_AudioDefectInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_QualityEvaluationInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_QualityEvaluationInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_LiveVideoQualityScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_LiveVideoQualityScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036video_quality_evaluation.proto\022\027trpc.m" +
      "edia.videoquality\032\014common.proto\"a\n\'Creat" +
      "eVideoQualityEvaluationTaskRequest\022\017\n\007Me" +
      "diaId\030\001 \001(\t\022\020\n\010TaskName\030\004 \001(\t\022\023\n\013Callbac" +
      "kURL\030\005 \001(\t\":\n(CreateVideoQualityEvaluati" +
      "onTaskResponse\022\016\n\006TaskId\030\001 \001(\t\"|\n\020VideoD" +
      "efectLimit\022L\n\nDefectType\030\001 \001(\01628.trpc.me" +
      "dia.videoquality.VideoDefectInfo.VideoDe" +
      "fectType\022\032\n\022LowerDurationLimit\030\002 \001(\r\"|\n\020" +
      "AudioDefectLimit\022L\n\nDefectType\030\001 \001(\01628.t" +
      "rpc.media.videoquality.AudioDefectInfo.A" +
      "udioDefectType\022\032\n\022LowerDurationLimit\030\002 \001" +
      "(\r\"L\n$DescribeVideoQualityLimitListReque" +
      "st\022\021\n\tRequestId\030\001 \001(\t\022\021\n\tProjectId\030\002 \001(\r" +
      "\"\271\001\n%DescribeVideoQualityLimitListRespon" +
      "se\022G\n\024VideoDefectLimitList\030\002 \003(\0132).trpc." +
      "media.videoquality.VideoDefectLimit\022G\n\024A" +
      "udioDefectLimitList\030\003 \003(\0132).trpc.media.v" +
      "ideoquality.AudioDefectLimit\"\321\001\n-Describ" +
      "eVideoQualityEvaluationTaskDataRequest\022\016" +
      "\n\006TaskId\030\001 \001(\t\022G\n\024VideoDefectLimitList\030\006" +
      " \003(\0132).trpc.media.videoquality.VideoDefe" +
      "ctLimit\022G\n\024AudioDefectLimitList\030\007 \003(\0132)." +
      "trpc.media.videoquality.AudioDefectLimit" +
      "\">\n\016AppearTimeInfo\022\026\n\016StartTimeStamp\030\001 \001" +
      "(\002\022\024\n\014EndTimeStamp\030\002 \001(\002\"\336\003\n\017VideoDefect" +
      "Info\022L\n\nDefectType\030\001 \001(\01628.trpc.media.vi" +
      "deoquality.VideoDefectInfo.VideoDefectTy" +
      "pe\022;\n\nDefectInfo\030\002 \003(\0132\'.trpc.media.vide" +
      "oquality.AppearTimeInfo\"\277\002\n\017VideoDefectT" +
      "ype\022\014\n\010kUnknown\020\000\022\016\n\nkSnowNoise\020\001\022\r\n\tkCo" +
      "lorBar\020\002\022\013\n\007kMosaic\020\003\022\020\n\014kBlackBorder\020\004\022" +
      "\020\n\014kWhiteBorder\020\005\022\023\n\017kFrostingBorder\020\006\022\014" +
      "\n\010kShaking\020\007\022\013\n\007kStatic\020\010\022\022\n\016kUnderExpos" +
      "ure\020\t\022\021\n\rkOverExposure\020\n\022\017\n\013kNoiseImage\020" +
      "\013\022\016\n\nkBlurImage\020\014\022\014\n\010kBarCode\020\r\022\013\n\007kQrCo" +
      "de\020\016\022\014\n\010kHuaPing\020\017\022\016\n\nkPureImage\020\020\022\013\n\007kW" +
      "xCode\020\021\022\020\n\014kSizeVariant\020\022\"\376\001\n\017AudioDefec" +
      "tInfo\022L\n\nDefectType\030\001 \001(\01628.trpc.media.v" +
      "ideoquality.AudioDefectInfo.AudioDefectT" +
      "ype\022;\n\nDefectInfo\030\002 \003(\0132\'.trpc.media.vid" +
      "eoquality.AppearTimeInfo\"`\n\017AudioDefectT" +
      "ype\022\014\n\010kUnknown\020\000\022\017\n\013kVolumeMute\020\023\022\016\n\nkV" +
      "olumeLow\020\024\022\017\n\013kVolumeHigh\020\025\022\r\n\tkNoVolume" +
      "\020\026\"\300\001\n\025QualityEvaluationInfo\022E\n\023VideoDef" +
      "ectInfoList\030\001 \003(\0132(.trpc.media.videoqual" +
      "ity.VideoDefectInfo\022E\n\023AudioDefectInfoLi" +
      "st\030\002 \003(\0132(.trpc.media.videoquality.Audio" +
      "DefectInfo\022\031\n\021VideoQualityScore\030\003 \001(\002\"z\n" +
      "\025LiveVideoQualityScore\022\031\n\021VideoQualitySc" +
      "ore\030\001 \001(\002\022F\n\025VideoQualityScoreTime\030\002 \001(\013" +
      "2\'.trpc.media.videoquality.AppearTimeInf" +
      "o\"\244\002\n\031LiveQualityEvaluationInfo\022E\n\023Video" +
      "DefectInfoList\030\001 \003(\0132(.trpc.media.videoq" +
      "uality.VideoDefectInfo\022E\n\023AudioDefectInf" +
      "oList\030\002 \003(\0132(.trpc.media.videoquality.Au" +
      "dioDefectInfo\022M\n\025VideoQualityScoreList\030\003" +
      " \003(\0132..trpc.media.videoquality.LiveVideo" +
      "QualityScore\022\025\n\rLiveStreamURL\030\004 \001(\t\022\023\n\013C" +
      "urrentTime\030\005 \001(\003\"\241\001\n.DescribeVideoQualit" +
      "yEvaluationTaskDataResponse\022-\n\010TaskInfo\030" +
      "\002 \001(\0132\033.trpc.media.common.TaskInfo\022@\n\010Ta" +
      "skData\030\004 \001(\0132..trpc.media.videoquality.Q" +
      "ualityEvaluationInfo\"\251\001\n2DescribeLiveVid" +
      "eoQualityEvaluationTaskDataResponse\022-\n\010T" +
      "askInfo\030\002 \001(\0132\033.trpc.media.common.TaskIn" +
      "fo\022D\n\010TaskData\030\004 \001(\01322.trpc.media.videoq" +
      "uality.LiveQualityEvaluationInfo2\343\005\n\026Vid" +
      "eoQualityEvaluation\022\247\001\n CreateVideoQuali" +
      "tyEvaluationTask\022@.trpc.media.videoquali" +
      "ty.CreateVideoQualityEvaluationTaskReque" +
      "st\032A.trpc.media.videoquality.CreateVideo" +
      "QualityEvaluationTaskResponse\022\271\001\n&Descri" +
      "beVideoQualityEvaluationTaskData\022F.trpc." +
      "media.videoquality.DescribeVideoQualityE" +
      "valuationTaskDataRequest\032G.trpc.media.vi" +
      "deoquality.DescribeVideoQualityEvaluatio" +
      "nTaskDataResponse\022\301\001\n*DescribeLiveVideoQ" +
      "ualityEvaluationTaskData\022F.trpc.media.vi" +
      "deoquality.DescribeVideoQualityEvaluatio" +
      "nTaskDataRequest\032K.trpc.media.videoquali" +
      "ty.DescribeLiveVideoQualityEvaluationTas" +
      "kDataResponse\022\236\001\n\035DescribeVideoQualityLi" +
      "mitList\022=.trpc.media.videoquality.Descri" +
      "beVideoQualityLimitListRequest\032>.trpc.me" +
      "dia.videoquality.DescribeVideoQualityLim" +
      "itListResponseB\240\001\n\023com.tencent.aimediaB\036" +
      "VideoQualityEvaluationProtocolZigit.code" +
      ".oa.com/yt-media-ai-videounderstanding/y" +
      "t-ai-media-middle-platform-api/protobuf-" +
      "spec/videoqualityb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.tencent.aimedia.CommonProtocol.getDescriptor(),
        });
    internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskRequest_descriptor,
        new java.lang.String[] { "MediaId", "TaskName", "CallbackURL", });
    internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_CreateVideoQualityEvaluationTaskResponse_descriptor,
        new java.lang.String[] { "TaskId", });
    internal_static_trpc_media_videoquality_VideoDefectLimit_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_trpc_media_videoquality_VideoDefectLimit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_VideoDefectLimit_descriptor,
        new java.lang.String[] { "DefectType", "LowerDurationLimit", });
    internal_static_trpc_media_videoquality_AudioDefectLimit_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_trpc_media_videoquality_AudioDefectLimit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_AudioDefectLimit_descriptor,
        new java.lang.String[] { "DefectType", "LowerDurationLimit", });
    internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListRequest_descriptor,
        new java.lang.String[] { "RequestId", "ProjectId", });
    internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_DescribeVideoQualityLimitListResponse_descriptor,
        new java.lang.String[] { "VideoDefectLimitList", "AudioDefectLimitList", });
    internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataRequest_descriptor,
        new java.lang.String[] { "TaskId", "VideoDefectLimitList", "AudioDefectLimitList", });
    internal_static_trpc_media_videoquality_AppearTimeInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_trpc_media_videoquality_AppearTimeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_AppearTimeInfo_descriptor,
        new java.lang.String[] { "StartTimeStamp", "EndTimeStamp", });
    internal_static_trpc_media_videoquality_VideoDefectInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_trpc_media_videoquality_VideoDefectInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_VideoDefectInfo_descriptor,
        new java.lang.String[] { "DefectType", "DefectInfo", });
    internal_static_trpc_media_videoquality_AudioDefectInfo_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_trpc_media_videoquality_AudioDefectInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_AudioDefectInfo_descriptor,
        new java.lang.String[] { "DefectType", "DefectInfo", });
    internal_static_trpc_media_videoquality_QualityEvaluationInfo_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_trpc_media_videoquality_QualityEvaluationInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_QualityEvaluationInfo_descriptor,
        new java.lang.String[] { "VideoDefectInfoList", "AudioDefectInfoList", "VideoQualityScore", });
    internal_static_trpc_media_videoquality_LiveVideoQualityScore_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_trpc_media_videoquality_LiveVideoQualityScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_LiveVideoQualityScore_descriptor,
        new java.lang.String[] { "VideoQualityScore", "VideoQualityScoreTime", });
    internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_LiveQualityEvaluationInfo_descriptor,
        new java.lang.String[] { "VideoDefectInfoList", "AudioDefectInfoList", "VideoQualityScoreList", "LiveStreamURL", "CurrentTime", });
    internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_DescribeVideoQualityEvaluationTaskDataResponse_descriptor,
        new java.lang.String[] { "TaskInfo", "TaskData", });
    internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_media_videoquality_DescribeLiveVideoQualityEvaluationTaskDataResponse_descriptor,
        new java.lang.String[] { "TaskInfo", "TaskData", });
    com.tencent.aimedia.CommonProtocol.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
